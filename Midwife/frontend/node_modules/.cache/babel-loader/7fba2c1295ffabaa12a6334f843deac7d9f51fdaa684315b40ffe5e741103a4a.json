{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  loadYoga: true\n};\nexports.loadYoga = loadYoga;\nvar _wrapAssembly = _interopRequireDefault(require(\"../wrapAssembly\"));\nvar _YGEnums = require(\"../generated/YGEnums\");\nObject.keys(_YGEnums).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _YGEnums[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function () {\n      return _YGEnums[key];\n    }\n  });\n});\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nconst loadAssembly = require('../../binaries/wasm-async-web');\nasync function loadYoga() {\n  return (0, _wrapAssembly.default)(await loadAssembly());\n}","map":{"version":3,"names":["_wrapAssembly","_interopRequireDefault","require","_YGEnums","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","obj","__esModule","default","loadAssembly","loadYoga"],"sources":["E:\\SLIIT\\2nd Year\\Y2S2\\ITP\\Project\\MOH-Midwife-3\\MOH-Midwife-3\\midwife\\frontend\\node_modules\\yoga-layout\\src\\entrypoint\\wasm-async-web.ts"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport wrapAssembly from '../wrapAssembly';\nimport type {Yoga} from '../wrapAssembly';\n\nexport * from '../generated/YGEnums';\nexport type {\n  Config,\n  DirtiedFunction,\n  MeasureFunction,\n  Node,\n  Yoga,\n} from '../wrapAssembly';\n\nconst loadAssembly = require('../../binaries/wasm-async-web');\n\nexport async function loadYoga(): Promise<Yoga> {\n  return wrapAssembly(await loadAssembly());\n}\n"],"mappings":";;;;;;;;;AASA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,QAAA,GAAAD,OAAA;AAAAE,MAAA,CAAAC,IAAA,CAAAF,QAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,QAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAZ,QAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AAAqC,SAAAN,uBAAAe,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAZrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA,MAAMG,YAAY,GAAGjB,OAAO,CAAC,+BAA+B,CAAC;AAEtD,eAAekB,QAAQA,CAAA,EAAkB;EAC9C,OAAO,IAAApB,aAAA,CAAAkB,OAAY,EAAC,MAAMC,YAAY,CAAC,CAAC,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}