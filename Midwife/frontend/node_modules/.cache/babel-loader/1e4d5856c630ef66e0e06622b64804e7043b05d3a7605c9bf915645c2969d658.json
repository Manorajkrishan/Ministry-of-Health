{"ast":null,"code":"import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse.js';\nimport parseUnit from 'postcss-value-parser/lib/unit.js';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine';\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\nvar flexDefaults = [1, 1, 0];\n/**\n * @type {(number | 'auto')[]}\n */\nvar flexAuto = [1, 1, 'auto'];\nvar expandFlex = function expandFlex(key, value) {\n  /**\n   * @type {(number | 'auto')[]}\n   */\n  var defaults = flexDefaults;\n  var matches = [];\n  if (value === 'auto') {\n    defaults = flexAuto;\n  } else {\n    matches = (\"\" + value).split(' ');\n  }\n  var flexGrow = matches[0] || defaults[0];\n  var flexShrink = matches[1] || defaults[1];\n  var flexBasis = matches[2] || defaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\n/* eslint-disable no-plusplus */\n// This file is ran directly with Node - needs to have .js extension\n// eslint-disable-next-line import/extensions\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\n/**\n * @param {Object} options\n * @param {Function} [options.expandsTo]\n * @param {number} [options.maxValues]\n * @param {boolean} [options.autoSupported]\n */\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    expandsTo = _ref.expandsTo,\n    _ref$maxValues = _ref.maxValues,\n    maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n    _ref$autoSupported = _ref.autoSupported,\n    autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n  return function (model, value) {\n    var _ref2;\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n\n      // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value);\n\n          // when unit isn't specified this condition is true\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    }\n\n    // checks that we have enough parsed values\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n    var first = parts[0];\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n  return value;\n};\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n};\n\n// Transforms shorthand transformOrigin values\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\nvar expandGap = function expandGap(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    rowGap: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    columnGap: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\nvar shorthands = {\n  flex: expandFlex,\n  gap: expandGap,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n\n/**\n * Transforms style key-value\n *\n * @param {string} key style key\n * @param {string} value style value\n * @returns {string | Number} transformed style values\n */\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n\n/**\n * Expand the shorthand properties.\n *\n * @param {Object} style object\n * @returns {Object} expanded style object\n */\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n  return resolvedStyle;\n};\n\n/**\n * Remove nil values from array\n *\n * @template T\n * @param {(T | null | undefined)[]} array\n * @returns {T[]} array without nils\n */\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n\n/**\n * Merges style objects array\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} merged style object\n */\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} flattened style object\n */\nvar flatten = compose(mergeStyles, compact, castArray);\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {string} value scalar value\n * @returns {Object} parsed value\n */\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1]),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n    case 'mm':\n      return scalar.value * mmFactor;\n    case 'cm':\n      return scalar.value * cmFactor;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n};\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n\n/**\n * Transform rgb color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n\n/**\n * Transform given color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/);\n\n  // Handle \"initial\", \"inherit\", \"unset\".\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n  var parsed = [];\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n    if (transform) {\n      var _transform$split = transform.split('('),\n        name = _transform$split[0],\n        rawValue = _transform$split[1];\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n  return parsed;\n};\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n    angle = _unitsRegexp$exec[1],\n    unit = _unitsRegexp$exec[2];\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n    value = _ref.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n            return Number.parseFloat(num);\n          }),\n          scaleX = _value$map[0],\n          _value$map$ = _value$map[1],\n          scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value);\n  return value;\n};\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return null;\n  }\n};\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n\n/**\n * @typedef {Function} Transform\n * @param {Object} style styles object\n * @returns {Object} transformed styles\n */\n\n/**\n * Transform styles values\n *\n * @param {Object} container\n * @returns {Transform} transform function\n */\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n    return resolvedStyle;\n  };\n};\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n    if (/@media/.test(key)) {\n      var _matchMedia;\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n};\nexport { resolveStyles as default, flatten, processTransform, transformColor };","map":{"version":3,"names":["compose","castArray","parse$1","parseUnit","hlsToHex","colorString","_extends","matchMedia","flexDefaults","flexAuto","expandFlex","key","value","defaults","matches","split","flexGrow","flexShrink","flexBasis","BOX_MODEL_UNITS","logError","style","console","error","repeat","length","expandBoxModel","_temp","_ref","expandsTo","_ref$maxValues","maxValues","_ref$autoSupported","autoSupported","model","_ref2","nodes","parts","i","node","type","push","result","includes","unit","first","second","third","fourth","processMargin","marginTop","marginRight","marginBottom","marginLeft","processMarginVertical","processMarginHorizontal","_ref3","processMarginSingle","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","expandBorders","color","width","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","processPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","processPaddingVertical","processPaddingHorizontal","processPaddingSingle","expandObjectPosition","objectPositionX","objectPositionY","Y_AXIS_SHORTHANDS","top","bottom","sortTransformOriginPair","a","b","getTransformOriginPair","values","pair","sort","expandTransformOrigin","transformOriginX","transformOriginY","expandGap","rowGap","columnGap","shorthands","flex","gap","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","expandStyle","expand","propsArray","Object","keys","resolvedStyle","extended","j","propName","propValue","compact","array","filter","Boolean","mergeStyles","styles","reduce","acc","s","Array","isArray","flatten","forEach","undefined","parseValue","exec","parseFloat","transformUnit","container","scalar","dpi","mmFactor","cmFactor","height","isRgb","test","isHsl","parseRgb","rgb","get","to","hex","parseHsl","hsl","map","Math","round","apply","toUpperCase","transformColor","parse","transformString","transforms","trim","parsed","transform","_transform$split","name","rawValue","splitChar","indexOf","val","operation","parseAngle","unitsRegexp","_unitsRegexp$exec","angle","number","Number","PI","normalizeTransformOperation","_value$map","num","scaleX","_value$map$","scaleY","normalize","operations","processTransform","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","processFontWeight","lv","toLowerCase","matchNumber","castFloat","offsetKeyword","transformObjectPosition","transformTransformOrigin","handlers","fontWeight","transformStyle","transformed","resolveMediaQueries","_extends2","_matchMedia","resolveStyles","computeMediaQueries","default"],"sources":["E:/SLIIT/2nd Year/Y2S2/ITP/Project/MOH-Midwife-3/MOH-Midwife-3/midwife/frontend/node_modules/@react-pdf/stylesheet/lib/index.js"],"sourcesContent":["import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse.js';\nimport parseUnit from 'postcss-value-parser/lib/unit.js';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine';\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\nvar flexDefaults = [1, 1, 0];\n/**\n * @type {(number | 'auto')[]}\n */\nvar flexAuto = [1, 1, 'auto'];\nvar expandFlex = function expandFlex(key, value) {\n  /**\n   * @type {(number | 'auto')[]}\n   */\n  var defaults = flexDefaults;\n  var matches = [];\n  if (value === 'auto') {\n    defaults = flexAuto;\n  } else {\n    matches = (\"\" + value).split(' ');\n  }\n  var flexGrow = matches[0] || defaults[0];\n  var flexShrink = matches[1] || defaults[1];\n  var flexBasis = matches[2] || defaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\n/* eslint-disable no-plusplus */\n// This file is ran directly with Node - needs to have .js extension\n// eslint-disable-next-line import/extensions\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\n/**\n * @param {Object} options\n * @param {Function} [options.expandsTo]\n * @param {number} [options.maxValues]\n * @param {boolean} [options.autoSupported]\n */\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    expandsTo = _ref.expandsTo,\n    _ref$maxValues = _ref.maxValues,\n    maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n    _ref$autoSupported = _ref.autoSupported,\n    autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n  return function (model, value) {\n    var _ref2;\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n\n      // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value);\n\n          // when unit isn't specified this condition is true\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    }\n\n    // checks that we have enough parsed values\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n    var first = parts[0];\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n  return value;\n};\n\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\n\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n};\n\n// Transforms shorthand transformOrigin values\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\n\nvar expandGap = function expandGap(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    rowGap: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    columnGap: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar shorthands = {\n  flex: expandFlex,\n  gap: expandGap,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n\n/**\n * Transforms style key-value\n *\n * @param {string} key style key\n * @param {string} value style value\n * @returns {string | Number} transformed style values\n */\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n\n/**\n * Expand the shorthand properties.\n *\n * @param {Object} style object\n * @returns {Object} expanded style object\n */\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n  return resolvedStyle;\n};\n\n/**\n * Remove nil values from array\n *\n * @template T\n * @param {(T | null | undefined)[]} array\n * @returns {T[]} array without nils\n */\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n\n/**\n * Merges style objects array\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} merged style object\n */\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Object[]} styles style objects array\n * @returns {Object} flattened style object\n */\nvar flatten = compose(mergeStyles, compact, castArray);\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {string} value scalar value\n * @returns {Object} parsed value\n */\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1]),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n    case 'mm':\n      return scalar.value * mmFactor;\n    case 'cm':\n      return scalar.value * cmFactor;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n};\n\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n\n/**\n * Transform rgb color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n\n/**\n * Transform given color to hexa\n *\n * @param {string} value styles value\n * @returns {Object} transformed value\n */\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/);\n\n  // Handle \"initial\", \"inherit\", \"unset\".\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n  var parsed = [];\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n    if (transform) {\n      var _transform$split = transform.split('('),\n        name = _transform$split[0],\n        rawValue = _transform$split[1];\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n  return parsed;\n};\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n    angle = _unitsRegexp$exec[1],\n    unit = _unitsRegexp$exec[2];\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n    value = _ref.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n            return Number.parseFloat(num);\n          }),\n          scaleX = _value$map[0],\n          _value$map$ = _value$map[1],\n          scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\n\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value);\n  return value;\n};\n\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return null;\n  }\n};\n\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n\n/**\n * @typedef {Function} Transform\n * @param {Object} style styles object\n * @returns {Object} transformed styles\n */\n\n/**\n * Transform styles values\n *\n * @param {Object} container\n * @returns {Transform} transform function\n */\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n    return resolvedStyle;\n  };\n};\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n    if (/@media/.test(key)) {\n      var _matchMedia;\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n};\n\nexport { resolveStyles as default, flatten, processTransform, transformColor };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,SAAS,QAAQ,gBAAgB;AACnD,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,UAAU,MAAM,cAAc;;AAErC;;AAEA;AACA,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;AAC7B,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC/C;AACF;AACA;EACE,IAAIC,QAAQ,GAAGL,YAAY;EAC3B,IAAIM,OAAO,GAAG,EAAE;EAChB,IAAIF,KAAK,KAAK,MAAM,EAAE;IACpBC,QAAQ,GAAGJ,QAAQ;EACrB,CAAC,MAAM;IACLK,OAAO,GAAG,CAAC,EAAE,GAAGF,KAAK,EAAEG,KAAK,CAAC,GAAG,CAAC;EACnC;EACA,IAAIC,QAAQ,GAAGF,OAAO,CAAC,CAAC,CAAC,IAAID,QAAQ,CAAC,CAAC,CAAC;EACxC,IAAII,UAAU,GAAGH,OAAO,CAAC,CAAC,CAAC,IAAID,QAAQ,CAAC,CAAC,CAAC;EAC1C,IAAIK,SAAS,GAAGJ,OAAO,CAAC,CAAC,CAAC,IAAID,QAAQ,CAAC,CAAC,CAAC;EACzC,OAAO;IACLG,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA;EACb,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,IAAIC,eAAe,GAAG,wBAAwB;AAC9C,IAAIC,QAAQ,GAAG,SAASA,QAAQA,CAACC,KAAK,EAAET,KAAK,EAAE;EAC7CU,OAAO,CAACC,KAAK,CAAC,oDAAoD,GAAGF,KAAK,GAAG,IAAI,GAAGT,KAAK,GAAG,SAAS,GAAG,GAAG,CAACY,MAAM,CAACH,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,GAAG,qBAAqB,GAAGJ,KAAK,GAAG,mBAAmB,CAAC;AAC7L,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,cAAc,GAAG,SAASA,cAAcA,CAACC,KAAK,EAAE;EAClD,IAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,KAAK;IACtCE,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC1BC,cAAc,GAAGF,IAAI,CAACG,SAAS;IAC/BA,SAAS,GAAGD,cAAc,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,cAAc;IAC1DE,kBAAkB,GAAGJ,IAAI,CAACK,aAAa;IACvCA,aAAa,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,kBAAkB;EAC5E,OAAO,UAAUE,KAAK,EAAEtB,KAAK,EAAE;IAC7B,IAAIuB,KAAK;IACT,IAAIC,KAAK,GAAGlC,OAAO,CAAC,EAAE,GAAGU,KAAK,CAAC;IAC/B,IAAIyB,KAAK,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACX,MAAM,EAAEa,CAAC,EAAE,EAAE;MACrC,IAAIC,IAAI,GAAGH,KAAK,CAACE,CAAC,CAAC;;MAEnB;MACA;MACA,IAAIC,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACC,IAAI,KAAK,QAAQ,IAAID,IAAI,CAACC,IAAI,KAAK,KAAK,EAAE;QAC7EpB,QAAQ,CAACc,KAAK,EAAEtB,KAAK,CAAC;QACtB,OAAO,CAAC,CAAC;MACX;MACA,IAAI2B,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACxB,IAAID,IAAI,CAAC3B,KAAK,KAAK,MAAM,IAAIqB,aAAa,EAAE;UAC1CI,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC3B,KAAK,CAAC;QACxB,CAAC,MAAM;UACL,IAAI8B,MAAM,GAAGvC,SAAS,CAACoC,IAAI,CAAC3B,KAAK,CAAC;;UAElC;UACA,IAAI8B,MAAM,IAAIvB,eAAe,CAACwB,QAAQ,CAACD,MAAM,CAACE,IAAI,CAAC,EAAE;YACnDP,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC3B,KAAK,CAAC;UACxB,CAAC,MAAM;YACLQ,QAAQ,CAACc,KAAK,EAAEtB,KAAK,CAAC;YACtB,OAAO,CAAC,CAAC;UACX;QACF;MACF;IACF;;IAEA;IACA,IAAIyB,KAAK,CAACZ,MAAM,GAAGM,SAAS,EAAE;MAC5BX,QAAQ,CAACc,KAAK,EAAEtB,KAAK,CAAC;MACtB,OAAO,CAAC,CAAC;IACX;IACA,IAAIiC,KAAK,GAAGR,KAAK,CAAC,CAAC,CAAC;IACpB,IAAIR,SAAS,EAAE;MACb,IAAIiB,MAAM,GAAGT,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC;MACjC,IAAIU,KAAK,GAAGV,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC;MAChC,IAAIW,MAAM,GAAGX,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC;MAC7C,OAAOR,SAAS,CAAC;QACfgB,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA,MAAM;QACdC,KAAK,EAAEA,KAAK;QACZC,MAAM,EAAEA;MACV,CAAC,CAAC;IACJ;IACA,OAAOb,KAAK,GAAG,CAAC,CAAC,EAAEA,KAAK,CAACD,KAAK,CAAC,GAAGW,KAAK,EAAEV,KAAK;EAChD,CAAC;AACH,CAAC;AAED,IAAIc,aAAa,GAAGvB,cAAc,CAAC;EACjCG,SAAS,EAAE,SAASA,SAASA,CAACD,IAAI,EAAE;IAClC,IAAIiB,KAAK,GAAGjB,IAAI,CAACiB,KAAK;MACpBC,MAAM,GAAGlB,IAAI,CAACkB,MAAM;MACpBC,KAAK,GAAGnB,IAAI,CAACmB,KAAK;MAClBC,MAAM,GAAGpB,IAAI,CAACoB,MAAM;IACtB,OAAO;MACLE,SAAS,EAAEL,KAAK;MAChBM,WAAW,EAAEL,MAAM;MACnBM,YAAY,EAAEL,KAAK;MACnBM,UAAU,EAAEL;IACd,CAAC;EACH,CAAC;EACDjB,SAAS,EAAE,CAAC;EACZE,aAAa,EAAE;AACjB,CAAC,CAAC;AACF,IAAIqB,qBAAqB,GAAG5B,cAAc,CAAC;EACzCG,SAAS,EAAE,SAASA,SAASA,CAACM,KAAK,EAAE;IACnC,IAAIU,KAAK,GAAGV,KAAK,CAACU,KAAK;MACrBC,MAAM,GAAGX,KAAK,CAACW,MAAM;IACvB,OAAO;MACLI,SAAS,EAAEL,KAAK;MAChBO,YAAY,EAAEN;IAChB,CAAC;EACH,CAAC;EACDf,SAAS,EAAE,CAAC;EACZE,aAAa,EAAE;AACjB,CAAC,CAAC;AACF,IAAIsB,uBAAuB,GAAG7B,cAAc,CAAC;EAC3CG,SAAS,EAAE,SAASA,SAASA,CAAC2B,KAAK,EAAE;IACnC,IAAIX,KAAK,GAAGW,KAAK,CAACX,KAAK;MACrBC,MAAM,GAAGU,KAAK,CAACV,MAAM;IACvB,OAAO;MACLK,WAAW,EAAEN,KAAK;MAClBQ,UAAU,EAAEP;IACd,CAAC;EACH,CAAC;EACDf,SAAS,EAAE,CAAC;EACZE,aAAa,EAAE;AACjB,CAAC,CAAC;AACF,IAAIwB,mBAAmB,GAAG/B,cAAc,CAAC;EACvCO,aAAa,EAAE;AACjB,CAAC,CAAC;AAEF,IAAIyB,sBAAsB,GAAG,wDAAwD;AACrF,IAAIC,oBAAoB,GAAG,SAASA,oBAAoBA,CAAC/C,KAAK,EAAE;EAC9D,OAAOA,KAAK,CAACgD,KAAK,CAACF,sBAAsB,CAAC,IAAI,EAAE;AAClD,CAAC;AACD,IAAIG,aAAa,GAAG,SAASA,aAAaA,CAAClD,GAAG,EAAEC,KAAK,EAAE;EACrD,IAAIgD,KAAK,GAAGD,oBAAoB,CAAC,EAAE,GAAG/C,KAAK,CAAC;EAC5C,IAAIgD,KAAK,EAAE;IACT,IAAIE,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,IAAIhD,KAAK;IAC7B,IAAIS,KAAK,GAAGuC,KAAK,CAAC,CAAC,CAAC,IAAIhD,KAAK;IAC7B,IAAImD,KAAK,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAIhD,KAAK;IAC7B,IAAID,GAAG,CAACiD,KAAK,CAAC,0BAA0B,CAAC,EAAE;MACzC,IAAIhC,IAAI;MACR,OAAOA,IAAI,GAAG,CAAC,CAAC,EAAEA,IAAI,CAACjB,GAAG,GAAG,OAAO,CAAC,GAAGmD,KAAK,EAAElC,IAAI,CAACjB,GAAG,GAAG,OAAO,CAAC,GAAGU,KAAK,EAAEO,IAAI,CAACjB,GAAG,GAAG,OAAO,CAAC,GAAGoD,KAAK,EAAEnC,IAAI;IAC/G;IACA,IAAIjB,GAAG,CAACiD,KAAK,CAAC,QAAQ,CAAC,EAAE;MACvB,OAAO;QACLI,cAAc,EAAEF,KAAK;QACrBG,gBAAgB,EAAEH,KAAK;QACvBI,iBAAiB,EAAEJ,KAAK;QACxBK,eAAe,EAAEL;MACnB,CAAC;IACH;IACA,IAAInD,GAAG,CAACiD,KAAK,CAAC,QAAQ,CAAC,EAAE;MACvB,OAAO;QACLQ,cAAc,EAAE/C,KAAK;QACrBgD,gBAAgB,EAAEhD,KAAK;QACvBiD,iBAAiB,EAAEjD,KAAK;QACxBkD,eAAe,EAAElD;MACnB,CAAC;IACH;IACA,IAAIV,GAAG,CAACiD,KAAK,CAAC,QAAQ,CAAC,EAAE;MACvB,OAAO;QACLY,cAAc,EAAET,KAAK;QACrBU,gBAAgB,EAAEV,KAAK;QACvBW,iBAAiB,EAAEX,KAAK;QACxBY,eAAe,EAAEZ;MACnB,CAAC;IACH;IACA,IAAIpD,GAAG,CAACiD,KAAK,CAAC,SAAS,CAAC,EAAE;MACxB,OAAO;QACLgB,mBAAmB,EAAEhE,KAAK;QAC1BiE,oBAAoB,EAAEjE,KAAK;QAC3BkE,uBAAuB,EAAElE,KAAK;QAC9BmE,sBAAsB,EAAEnE;MAC1B,CAAC;IACH;IACA,OAAO;MACLoD,cAAc,EAAEF,KAAK;MACrBM,cAAc,EAAE/C,KAAK;MACrBmD,cAAc,EAAET,KAAK;MACrBE,gBAAgB,EAAEH,KAAK;MACvBO,gBAAgB,EAAEhD,KAAK;MACvBoD,gBAAgB,EAAEV,KAAK;MACvBG,iBAAiB,EAAEJ,KAAK;MACxBQ,iBAAiB,EAAEjD,KAAK;MACxBqD,iBAAiB,EAAEX,KAAK;MACxBI,eAAe,EAAEL,KAAK;MACtBS,eAAe,EAAElD,KAAK;MACtBsD,eAAe,EAAEZ;IACnB,CAAC;EACH;EACA,OAAOnD,KAAK;AACd,CAAC;AAED,IAAIoE,cAAc,GAAGtD,cAAc,CAAC;EAClCG,SAAS,EAAE,SAASA,SAASA,CAACD,IAAI,EAAE;IAClC,IAAIiB,KAAK,GAAGjB,IAAI,CAACiB,KAAK;MACpBC,MAAM,GAAGlB,IAAI,CAACkB,MAAM;MACpBC,KAAK,GAAGnB,IAAI,CAACmB,KAAK;MAClBC,MAAM,GAAGpB,IAAI,CAACoB,MAAM;IACtB,OAAO;MACLiC,UAAU,EAAEpC,KAAK;MACjBqC,YAAY,EAAEpC,MAAM;MACpBqC,aAAa,EAAEpC,KAAK;MACpBqC,WAAW,EAAEpC;IACf,CAAC;EACH,CAAC;EACDjB,SAAS,EAAE;AACb,CAAC,CAAC;AACF,IAAIsD,sBAAsB,GAAG3D,cAAc,CAAC;EAC1CG,SAAS,EAAE,SAASA,SAASA,CAACM,KAAK,EAAE;IACnC,IAAIU,KAAK,GAAGV,KAAK,CAACU,KAAK;MACrBC,MAAM,GAAGX,KAAK,CAACW,MAAM;IACvB,OAAO;MACLmC,UAAU,EAAEpC,KAAK;MACjBsC,aAAa,EAAErC;IACjB,CAAC;EACH,CAAC;EACDf,SAAS,EAAE;AACb,CAAC,CAAC;AACF,IAAIuD,wBAAwB,GAAG5D,cAAc,CAAC;EAC5CG,SAAS,EAAE,SAASA,SAASA,CAAC2B,KAAK,EAAE;IACnC,IAAIX,KAAK,GAAGW,KAAK,CAACX,KAAK;MACrBC,MAAM,GAAGU,KAAK,CAACV,MAAM;IACvB,OAAO;MACLoC,YAAY,EAAErC,KAAK;MACnBuC,WAAW,EAAEtC;IACf,CAAC;EACH,CAAC;EACDf,SAAS,EAAE;AACb,CAAC,CAAC;AACF,IAAIwD,oBAAoB,GAAG7D,cAAc,CAAC,CAAC;AAE3C,IAAI8D,oBAAoB,GAAG,SAASA,oBAAoBA,CAAC7E,GAAG,EAAEC,KAAK,EAAE;EACnE,IAAIgD,KAAK,GAAG,CAAC,EAAE,GAAGhD,KAAK,EAAEG,KAAK,CAAC,GAAG,CAAC;EACnC,OAAO;IACL0E,eAAe,EAAE,CAAC7B,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,KAAKhD,KAAK;IAClF8E,eAAe,EAAE,CAAC9B,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,KAAKhD;EAC/E,CAAC;AACH,CAAC;AAED,IAAI+E,iBAAiB,GAAG;EACtBC,GAAG,EAAE,IAAI;EACTC,MAAM,EAAE;AACV,CAAC;AACD,IAAIC,uBAAuB,GAAG,SAASA,uBAAuBA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACnE,IAAIL,iBAAiB,CAACI,CAAC,CAAC,EAAE,OAAO,CAAC;EAClC,IAAIJ,iBAAiB,CAACK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;EACnC,OAAO,CAAC;AACV,CAAC;AACD,IAAIC,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,MAAM,EAAE;EACnE,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACzE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC;EAC/D,IAAI0E,IAAI,GAAGD,MAAM,CAACzE,MAAM,KAAK,CAAC,GAAG,CAACyE,MAAM,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAGA,MAAM;EAC/D,OAAOC,IAAI,CAACC,IAAI,CAACN,uBAAuB,CAAC;AAC3C,CAAC;;AAED;AACA,IAAIO,qBAAqB,GAAG,SAASA,qBAAqBA,CAAC1F,GAAG,EAAEC,KAAK,EAAE;EACrE,IAAIgD,KAAK,GAAG,CAAC,EAAE,GAAGhD,KAAK,EAAEG,KAAK,CAAC,GAAG,CAAC;EACnC,IAAIoF,IAAI,GAAGF,sBAAsB,CAACrC,KAAK,CAAC;EACxC,OAAO;IACL0C,gBAAgB,EAAEH,IAAI,CAAC,CAAC,CAAC;IACzBI,gBAAgB,EAAEJ,IAAI,CAAC,CAAC;EAC1B,CAAC;AACH,CAAC;AAED,IAAIK,SAAS,GAAG,SAASA,SAASA,CAAC7F,GAAG,EAAEC,KAAK,EAAE;EAC7C,IAAIgD,KAAK,GAAG,CAAC,EAAE,GAAGhD,KAAK,EAAEG,KAAK,CAAC,GAAG,CAAC;EACnC,OAAO;IACL0F,MAAM,EAAE,CAAC7C,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,KAAKhD,KAAK;IACzE8F,SAAS,EAAE,CAAC9C,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,KAAKhD;EACzE,CAAC;AACH,CAAC;AAED,IAAI+F,UAAU,GAAG;EACfC,IAAI,EAAElG,UAAU;EAChBmG,GAAG,EAAEL,SAAS;EACdM,MAAM,EAAE7D,aAAa;EACrB8D,gBAAgB,EAAExD,uBAAuB;EACzCyD,cAAc,EAAE1D,qBAAqB;EACrCJ,SAAS,EAAEO,mBAAmB;EAC9BN,WAAW,EAAEM,mBAAmB;EAChCL,YAAY,EAAEK,mBAAmB;EACjCJ,UAAU,EAAEI,mBAAmB;EAC/BwD,OAAO,EAAEjC,cAAc;EACvBkC,iBAAiB,EAAE5B,wBAAwB;EAC3C6B,eAAe,EAAE9B,sBAAsB;EACvCJ,UAAU,EAAEM,oBAAoB;EAChCL,YAAY,EAAEK,oBAAoB;EAClCJ,aAAa,EAAEI,oBAAoB;EACnCH,WAAW,EAAEG,oBAAoB;EACjC6B,MAAM,EAAEvD,aAAa;EACrBwD,SAAS,EAAExD,aAAa;EACxByD,WAAW,EAAEzD,aAAa;EAC1B0D,YAAY,EAAE1D,aAAa;EAC3B2D,UAAU,EAAE3D,aAAa;EACzB4D,WAAW,EAAE5D,aAAa;EAC1B6D,YAAY,EAAE7D,aAAa;EAC3B8D,WAAW,EAAE9D,aAAa;EAC1B+D,WAAW,EAAE/D,aAAa;EAC1BgE,cAAc,EAAErC,oBAAoB;EACpCsC,eAAe,EAAEzB;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI0B,WAAW,GAAG,SAASA,WAAWA,CAACpH,GAAG,EAAEC,KAAK,EAAE;EACjD,IAAIgB,IAAI;EACR,OAAO+E,UAAU,CAAChG,GAAG,CAAC,GAAGgG,UAAU,CAAChG,GAAG,CAAC,CAACA,GAAG,EAAEC,KAAK,CAAC,IAAIgB,IAAI,GAAG,CAAC,CAAC,EAAEA,IAAI,CAACjB,GAAG,CAAC,GAAGC,KAAK,EAAEgB,IAAI,CAAC;AAC7F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIoG,MAAM,GAAG,SAASA,MAAMA,CAAC3G,KAAK,EAAE;EAClC,IAAI,CAACA,KAAK,EAAE,OAAOA,KAAK;EACxB,IAAI4G,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC9G,KAAK,CAAC;EACnC,IAAI+G,aAAa,GAAG,CAAC,CAAC;EACtB,KAAK,IAAI9F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,UAAU,CAACxG,MAAM,EAAEa,CAAC,IAAI,CAAC,EAAE;IAC7C,IAAI3B,GAAG,GAAGsH,UAAU,CAAC3F,CAAC,CAAC;IACvB,IAAI1B,KAAK,GAAGS,KAAK,CAACV,GAAG,CAAC;IACtB,IAAI0H,QAAQ,GAAGN,WAAW,CAACpH,GAAG,EAAEC,KAAK,CAAC;IACtC,IAAIuH,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC;IAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAAC1G,MAAM,EAAE6G,CAAC,IAAI,CAAC,EAAE;MACvC,IAAIC,QAAQ,GAAGJ,IAAI,CAACG,CAAC,CAAC;MACtB,IAAIE,SAAS,GAAGH,QAAQ,CAACE,QAAQ,CAAC;MAClCH,aAAa,CAACG,QAAQ,CAAC,GAAGC,SAAS;IACrC;EACF;EACA,OAAOJ,aAAa;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,OAAO,GAAG,SAASA,OAAOA,CAACC,KAAK,EAAE;EACpC,OAAOA,KAAK,CAACC,MAAM,CAACC,OAAO,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,MAAM,EAAE;EAC7C,OAAOA,MAAM,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE3H,KAAK,EAAE;IACzC,IAAI4H,CAAC,GAAGC,KAAK,CAACC,OAAO,CAAC9H,KAAK,CAAC,GAAG+H,OAAO,CAAC/H,KAAK,CAAC,GAAGA,KAAK;IACrD6G,MAAM,CAACC,IAAI,CAACc,CAAC,CAAC,CAACI,OAAO,CAAC,UAAU1I,GAAG,EAAE;MACpC,IAAIsI,CAAC,CAACtI,GAAG,CAAC,KAAK,IAAI,IAAIsI,CAAC,CAACtI,GAAG,CAAC,KAAK2I,SAAS,EAAE;QAC3CN,GAAG,CAACrI,GAAG,CAAC,GAAGsI,CAAC,CAACtI,GAAG,CAAC;MACnB;IACF,CAAC,CAAC;IACF,OAAOqI,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,OAAO,GAAGpJ,OAAO,CAAC6I,WAAW,EAAEJ,OAAO,EAAExI,SAAS,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIsJ,UAAU,GAAG,SAASA,UAAUA,CAAC3I,KAAK,EAAE;EAC1C,IAAIgD,KAAK,GAAG,yCAAyC,CAAC4F,IAAI,CAAC5I,KAAK,CAAC;EACjE,OAAOgD,KAAK,GAAG;IACbhD,KAAK,EAAE6I,UAAU,CAAC7F,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3BhB,IAAI,EAAEgB,KAAK,CAAC,CAAC,CAAC,IAAI;EACpB,CAAC,GAAG;IACFhD,KAAK,EAAEA,KAAK;IACZgC,IAAI,EAAE0G;EACR,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,aAAa,GAAG,SAASA,aAAaA,CAACC,SAAS,EAAE/I,KAAK,EAAE;EAC3D,IAAIgJ,MAAM,GAAGL,UAAU,CAAC3I,KAAK,CAAC;EAC9B,IAAIiJ,GAAG,GAAGF,SAAS,CAACE,GAAG,IAAI,EAAE;EAC7B,IAAIC,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAGD,GAAG;EAC7B,IAAIE,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAGF,GAAG;EAC7B,QAAQD,MAAM,CAAChH,IAAI;IACjB,KAAK,IAAI;MACP,OAAOgH,MAAM,CAAChJ,KAAK,GAAGiJ,GAAG;IAC3B,KAAK,IAAI;MACP,OAAOD,MAAM,CAAChJ,KAAK,GAAGkJ,QAAQ;IAChC,KAAK,IAAI;MACP,OAAOF,MAAM,CAAChJ,KAAK,GAAGmJ,QAAQ;IAChC,KAAK,IAAI;MACP,OAAOH,MAAM,CAAChJ,KAAK,IAAI+I,SAAS,CAACK,MAAM,GAAG,GAAG,CAAC;IAChD,KAAK,IAAI;MACP,OAAOJ,MAAM,CAAChJ,KAAK,IAAI+I,SAAS,CAAC5F,KAAK,GAAG,GAAG,CAAC;IAC/C;MACE,OAAO6F,MAAM,CAAChJ,KAAK;EACvB;AACF,CAAC;AAED,IAAIqJ,KAAK,GAAG,SAASA,KAAKA,CAACrJ,KAAK,EAAE;EAChC,OAAO,QAAQ,CAACsJ,IAAI,CAACtJ,KAAK,CAAC;AAC7B,CAAC;AACD,IAAIuJ,KAAK,GAAG,SAASA,KAAKA,CAACvJ,KAAK,EAAE;EAChC,OAAO,QAAQ,CAACsJ,IAAI,CAACtJ,KAAK,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIwJ,QAAQ,GAAG,SAASA,QAAQA,CAACxJ,KAAK,EAAE;EACtC,IAAIyJ,GAAG,GAAGhK,WAAW,CAACiK,GAAG,CAACD,GAAG,CAACzJ,KAAK,CAAC;EACpC,OAAOP,WAAW,CAACkK,EAAE,CAACC,GAAG,CAACH,GAAG,CAAC;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,QAAQ,GAAG,SAASA,QAAQA,CAAC7J,KAAK,EAAE;EACtC,IAAI8J,GAAG,GAAGrK,WAAW,CAACiK,GAAG,CAACI,GAAG,CAAC9J,KAAK,CAAC,CAAC+J,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;EACpD,IAAIL,GAAG,GAAGpK,QAAQ,CAAC0K,KAAK,CAAC,KAAK,CAAC,EAAEJ,GAAG,CAAC;EACrC,OAAOF,GAAG,CAACO,WAAW,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACpK,KAAK,EAAE;EAClD,IAAIqJ,KAAK,CAACrJ,KAAK,CAAC,EAAE,OAAOwJ,QAAQ,CAACxJ,KAAK,CAAC;EACxC,IAAIuJ,KAAK,CAACvJ,KAAK,CAAC,EAAE,OAAO6J,QAAQ,CAAC7J,KAAK,CAAC;EACxC,OAAOA,KAAK;AACd,CAAC;AAED,IAAIqK,KAAK,GAAG,SAASA,KAAKA,CAACC,eAAe,EAAE;EAC1C,IAAIC,UAAU,GAAGD,eAAe,CAACE,IAAI,CAAC,CAAC,CAACrK,KAAK,CAAC,QAAQ,CAAC;;EAEvD;EACA,IAAIoK,UAAU,CAAC1J,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO,CAAC,CAAC0J,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;EAChC;EACA,IAAIE,MAAM,GAAG,EAAE;EACf,KAAK,IAAI/I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6I,UAAU,CAAC1J,MAAM,EAAEa,CAAC,IAAI,CAAC,EAAE;IAC7C,IAAIgJ,SAAS,GAAGH,UAAU,CAAC7I,CAAC,CAAC;IAC7B,IAAIgJ,SAAS,EAAE;MACb,IAAIC,gBAAgB,GAAGD,SAAS,CAACvK,KAAK,CAAC,GAAG,CAAC;QACzCyK,IAAI,GAAGD,gBAAgB,CAAC,CAAC,CAAC;QAC1BE,QAAQ,GAAGF,gBAAgB,CAAC,CAAC,CAAC;MAChC,IAAIG,SAAS,GAAGD,QAAQ,CAACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG;MACtD,IAAI/K,KAAK,GAAG6K,QAAQ,CAAC1K,KAAK,CAAC2K,SAAS,CAAC,CAACf,GAAG,CAAC,UAAUiB,GAAG,EAAE;QACvD,OAAOA,GAAG,CAACR,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC;MACFC,MAAM,CAAC5I,IAAI,CAAC;QACVoJ,SAAS,EAAEL,IAAI;QACf5K,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ;EACF;EACA,OAAOyK,MAAM;AACf,CAAC;AACD,IAAIS,UAAU,GAAG,SAASA,UAAUA,CAAClL,KAAK,EAAE;EAC1C,IAAImL,WAAW,GAAG,sBAAsB;EACxC,IAAIC,iBAAiB,GAAGD,WAAW,CAACvC,IAAI,CAAC5I,KAAK,CAAC;IAC7CqL,KAAK,GAAGD,iBAAiB,CAAC,CAAC,CAAC;IAC5BpJ,IAAI,GAAGoJ,iBAAiB,CAAC,CAAC,CAAC;EAC7B,IAAIE,MAAM,GAAGC,MAAM,CAAC1C,UAAU,CAACwC,KAAK,CAAC;EACrC,OAAOrJ,IAAI,KAAK,KAAK,GAAGsJ,MAAM,GAAG,GAAG,GAAGtB,IAAI,CAACwB,EAAE,GAAGF,MAAM;AACzD,CAAC;AACD,IAAIG,2BAA2B,GAAG,SAASA,2BAA2BA,CAACzK,IAAI,EAAE;EAC3E,IAAIiK,SAAS,GAAGjK,IAAI,CAACiK,SAAS;IAC5BjL,KAAK,GAAGgB,IAAI,CAAChB,KAAK;EACpB,QAAQiL,SAAS;IACf,KAAK,OAAO;MACV;QACE,IAAIS,UAAU,GAAG1L,KAAK,CAAC+J,GAAG,CAAC,UAAU4B,GAAG,EAAE;YACtC,OAAOJ,MAAM,CAAC1C,UAAU,CAAC8C,GAAG,CAAC;UAC/B,CAAC,CAAC;UACFC,MAAM,GAAGF,UAAU,CAAC,CAAC,CAAC;UACtBG,WAAW,GAAGH,UAAU,CAAC,CAAC,CAAC;UAC3BI,MAAM,GAAGD,WAAW,KAAK,KAAK,CAAC,GAAGD,MAAM,GAAGC,WAAW;QACxD,OAAO;UACLZ,SAAS,EAAE,OAAO;UAClBjL,KAAK,EAAE,CAAC4L,MAAM,EAAEE,MAAM;QACxB,CAAC;MACH;IACF,KAAK,QAAQ;MACX;QACE,OAAO;UACLb,SAAS,EAAE,OAAO;UAClBjL,KAAK,EAAE,CAACuL,MAAM,CAAC1C,UAAU,CAAC7I,KAAK,CAAC,EAAE,CAAC;QACrC,CAAC;MACH;IACF,KAAK,QAAQ;MACX;QACE,OAAO;UACLiL,SAAS,EAAE,OAAO;UAClBjL,KAAK,EAAE,CAAC,CAAC,EAAEuL,MAAM,CAAC1C,UAAU,CAAC7I,KAAK,CAAC;QACrC,CAAC;MACH;IACF,KAAK,QAAQ;MACX;QACE,OAAO;UACLiL,SAAS,EAAE,QAAQ;UACnBjL,KAAK,EAAE,CAACkL,UAAU,CAAClL,KAAK,CAAC;QAC3B,CAAC;MACH;IACF,KAAK,WAAW;MACd;QACE,OAAO;UACLiL,SAAS,EAAE,WAAW;UACtBjL,KAAK,EAAEA,KAAK,CAAC+J,GAAG,CAAC,UAAU4B,GAAG,EAAE;YAC9B,OAAOJ,MAAM,CAAC1C,UAAU,CAAC8C,GAAG,CAAC;UAC/B,CAAC;QACH,CAAC;MACH;IACF,KAAK,YAAY;MACf;QACE,OAAO;UACLV,SAAS,EAAE,WAAW;UACtBjL,KAAK,EAAE,CAACuL,MAAM,CAAC1C,UAAU,CAAC7I,KAAK,CAAC,EAAE,CAAC;QACrC,CAAC;MACH;IACF,KAAK,YAAY;MACf;QACE,OAAO;UACLiL,SAAS,EAAE,WAAW;UACtBjL,KAAK,EAAE,CAAC,CAAC,EAAEuL,MAAM,CAAC1C,UAAU,CAAC7I,KAAK,CAAC;QACrC,CAAC;MACH;IACF,KAAK,MAAM;MACT;QACE,OAAO;UACLiL,SAAS,EAAE,MAAM;UACjBjL,KAAK,EAAEA,KAAK,CAAC+J,GAAG,CAACmB,UAAU;QAC7B,CAAC;MACH;IACF,KAAK,OAAO;MACV;QACE,OAAO;UACLD,SAAS,EAAE,MAAM;UACjBjL,KAAK,EAAE,CAACkL,UAAU,CAAClL,KAAK,CAAC,EAAE,CAAC;QAC9B,CAAC;MACH;IACF,KAAK,OAAO;MACV;QACE,OAAO;UACLiL,SAAS,EAAE,MAAM;UACjBjL,KAAK,EAAE,CAAC,CAAC,EAAEkL,UAAU,CAAClL,KAAK,CAAC;QAC9B,CAAC;MACH;IACF;MACE;QACE,OAAO;UACLiL,SAAS,EAAEA,SAAS;UACpBjL,KAAK,EAAEA,KAAK,CAAC+J,GAAG,CAAC,UAAU4B,GAAG,EAAE;YAC9B,OAAOJ,MAAM,CAAC1C,UAAU,CAAC8C,GAAG,CAAC;UAC/B,CAAC;QACH,CAAC;MACH;EACJ;AACF,CAAC;AACD,IAAII,SAAS,GAAG,SAASA,SAASA,CAACC,UAAU,EAAE;EAC7C,OAAOA,UAAU,CAACjC,GAAG,CAAC,UAAUkB,SAAS,EAAE;IACzC,OAAOQ,2BAA2B,CAACR,SAAS,CAAC;EAC/C,CAAC,CAAC;AACJ,CAAC;AACD,IAAIgB,gBAAgB,GAAG,SAASA,gBAAgBA,CAACjM,KAAK,EAAE;EACtD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK;EAC3C,OAAO+L,SAAS,CAAC1B,KAAK,CAACrK,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,IAAIkM,YAAY,GAAG;EACjBC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE,GAAG;EACbC,UAAU,EAAE,GAAG;EACfC,UAAU,EAAE,GAAG;EACfC,KAAK,EAAE,GAAG;EACVC,MAAM,EAAE,GAAG;EACXC,MAAM,EAAE,GAAG;EACXC,QAAQ,EAAE,GAAG;EACbC,QAAQ,EAAE,GAAG;EACbC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAE,GAAG;EACdC,SAAS,EAAE,GAAG;EACdC,KAAK,EAAE,GAAG;EACVC,KAAK,EAAE;AACT,CAAC;AACD,IAAIC,iBAAiB,GAAG,SAASA,iBAAiBA,CAACjN,KAAK,EAAE;EACxD,IAAI,CAACA,KAAK,EAAE,OAAOkM,YAAY,CAACM,MAAM;EACtC,IAAI,OAAOxM,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK;EAC3C,IAAIkN,EAAE,GAAGlN,KAAK,CAACmN,WAAW,CAAC,CAAC;EAC5B,IAAIjB,YAAY,CAACgB,EAAE,CAAC,EAAE,OAAOhB,YAAY,CAACgB,EAAE,CAAC;EAC7C,OAAOlN,KAAK;AACd,CAAC;AAED,IAAIoN,WAAW,GAAG,SAASA,WAAWA,CAACpN,KAAK,EAAE;EAC5C,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAI,eAAe,CAACsJ,IAAI,CAACtJ,KAAK,CAAC;AACjE,CAAC;AACD,IAAIqN,SAAS,GAAG,SAASA,SAASA,CAACrN,KAAK,EAAE;EACxC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAOA,KAAK;EAC3C,IAAIoN,WAAW,CAACpN,KAAK,CAAC,EAAE,OAAO6I,UAAU,CAAC7I,KAAK,CAAC;EAChD,OAAOA,KAAK;AACd,CAAC;AAED,IAAIsN,aAAa,GAAG,SAASA,aAAaA,CAACtN,KAAK,EAAE;EAChD,QAAQA,KAAK;IACX,KAAK,KAAK;IACV,KAAK,MAAM;MACT,OAAO,IAAI;IACb,KAAK,OAAO;IACZ,KAAK,QAAQ;MACX,OAAO,MAAM;IACf,KAAK,QAAQ;MACX,OAAO,KAAK;IACd;MACE,OAAO,IAAI;EACf;AACF,CAAC;AAED,IAAIuN,uBAAuB,GAAG,SAASA,uBAAuBA,CAACvN,KAAK,EAAE;EACpE,OAAOsN,aAAa,CAACtN,KAAK,CAAC,IAAIqN,SAAS,CAACrN,KAAK,CAAC;AACjD,CAAC;AAED,IAAIwN,wBAAwB,GAAG,SAASA,wBAAwBA,CAACxN,KAAK,EAAE;EACtE,OAAOsN,aAAa,CAACtN,KAAK,CAAC,IAAIqN,SAAS,CAACrN,KAAK,CAAC;AACjD,CAAC;AAED,IAAIyN,QAAQ,GAAG;EACb/C,SAAS,EAAEuB,gBAAgB;EAC3ByB,UAAU,EAAET,iBAAiB;EAC7BpI,eAAe,EAAE0I,uBAAuB;EACxCzI,eAAe,EAAEyI,uBAAuB;EACxC7H,gBAAgB,EAAE8H,wBAAwB;EAC1C7H,gBAAgB,EAAE6H;AACpB,CAAC;AACD,IAAIG,cAAc,GAAG,SAASA,cAAcA,CAAC5N,GAAG,EAAEC,KAAK,EAAE+I,SAAS,EAAE;EAClE,IAAIjH,MAAM,GAAG2L,QAAQ,CAAC1N,GAAG,CAAC,GAAG0N,QAAQ,CAAC1N,GAAG,CAAC,CAACC,KAAK,CAAC,GAAGA,KAAK;EACzD,OAAOoK,cAAc,CAACtB,aAAa,CAACC,SAAS,EAAEsE,SAAS,CAACvL,MAAM,CAAC,CAAC,CAAC;AACpE,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI4I,SAAS,GAAG,SAASA,SAASA,CAAC3B,SAAS,EAAE;EAC5C,OAAO,UAAUtI,KAAK,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE,OAAOA,KAAK;IACxB,IAAI4G,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC9G,KAAK,CAAC;IACnC,IAAI+G,aAAa,GAAG,CAAC,CAAC;IACtB,KAAK,IAAI9F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,UAAU,CAACxG,MAAM,EAAEa,CAAC,IAAI,CAAC,EAAE;MAC7C,IAAI3B,GAAG,GAAGsH,UAAU,CAAC3F,CAAC,CAAC;MACvB,IAAI1B,KAAK,GAAGS,KAAK,CAACV,GAAG,CAAC;MACtB,IAAI6N,WAAW,GAAGD,cAAc,CAAC5N,GAAG,EAAEC,KAAK,EAAE+I,SAAS,CAAC;MACvDvB,aAAa,CAACzH,GAAG,CAAC,GAAG6N,WAAW;IAClC;IACA,OAAOpG,aAAa;EACtB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAIqG,mBAAmB,GAAG,SAASA,mBAAmBA,CAAC9E,SAAS,EAAEb,MAAM,EAAE;EACxE,OAAOZ,MAAM,CAACC,IAAI,CAACW,MAAM,CAAC,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAErI,GAAG,EAAE;IACpD,IAAI+N,SAAS;IACb,IAAI,QAAQ,CAACxE,IAAI,CAACvJ,GAAG,CAAC,EAAE;MACtB,IAAIgO,WAAW;MACf,OAAOrO,QAAQ,CAAC,CAAC,CAAC,EAAE0I,GAAG,EAAEzI,UAAU,EAAEoO,WAAW,GAAG,CAAC,CAAC,EAAEA,WAAW,CAAChO,GAAG,CAAC,GAAGmI,MAAM,CAACnI,GAAG,CAAC,EAAEgO,WAAW,GAAGhF,SAAS,CAAC,CAAC;IAClH;IACA,OAAOrJ,QAAQ,CAAC,CAAC,CAAC,EAAE0I,GAAG,GAAG0F,SAAS,GAAG,CAAC,CAAC,EAAEA,SAAS,CAAC/N,GAAG,CAAC,GAAGmI,MAAM,CAACnI,GAAG,CAAC,EAAE+N,SAAS,CAAC,CAAC;EACrF,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,aAAa,GAAG,SAASA,aAAaA,CAACjF,SAAS,EAAEtI,KAAK,EAAE;EAC3D,IAAIwN,mBAAmB,GAAG,SAASA,mBAAmBA,CAACjO,KAAK,EAAE;IAC5D,OAAO6N,mBAAmB,CAAC9E,SAAS,EAAE/I,KAAK,CAAC;EAC9C,CAAC;EACD,OAAOZ,OAAO,CAACsL,SAAS,CAAC3B,SAAS,CAAC,EAAE3B,MAAM,EAAE6G,mBAAmB,EAAEzF,OAAO,CAAC,CAAC/H,KAAK,CAAC;AACnF,CAAC;AAED,SAASuN,aAAa,IAAIE,OAAO,EAAE1F,OAAO,EAAEyD,gBAAgB,EAAE7B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}