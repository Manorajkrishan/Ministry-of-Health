{"ast":null,"code":"export const readUInt8 = (array, offset) => {\n  return array[offset];\n};\nexport const readUInt16BE = (array, offset) => {\n  return array[offset] << 8 | array[offset + 1];\n};\nexport const readUInt16LE = (array, offset) => {\n  return array[offset] | array[offset + 1] << 8;\n};\nexport const readUInt32BE = (array, offset) => {\n  return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];\n};\nexport const readUInt32LE = (array, offset) => {\n  return array[offset] | array[offset + 1] << 8 | array[offset + 2] << 16 | array[offset + 3] << 24;\n};\nexport const uint8ArrayToHexString = uint8Array => {\n  return Array.from(uint8Array, byte => byte.toString(16).padStart(2, \"0\")).join(\"\");\n};\nconst decoder = new TextDecoder(\"utf-8\");\nexport const uint8ArrayToString = uint8Array => {\n  return decoder.decode(uint8Array);\n};\nexport const concatenateUint8Arrays = arrays => {\n  const totalLength = arrays.reduce((length, arr) => length + arr.length, 0);\n  const concatenatedArray = new Uint8Array(totalLength);\n  let offset = 0;\n  arrays.forEach(arr => {\n    concatenatedArray.set(arr, offset);\n    offset += arr.length;\n  });\n  return concatenatedArray;\n};","map":{"version":3,"names":["readUInt8","array","offset","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","uint8ArrayToHexString","uint8Array","Array","from","byte","toString","padStart","join","decoder","TextDecoder","uint8ArrayToString","decode","concatenateUint8Arrays","arrays","totalLength","reduce","length","arr","concatenatedArray","Uint8Array","forEach","set"],"sources":["E:/SLIIT/2nd Year/Y2S2/ITP/Project/MOH-Midwife-3/MOH-Midwife-3/midwife/frontend/node_modules/jay-peg/src/markers/utils.js"],"sourcesContent":["export const readUInt8 = (array, offset) => {\n  return array[offset];\n};\n\nexport const readUInt16BE = (array, offset) => {\n  return (array[offset] << 8) | array[offset + 1];\n};\n\nexport const readUInt16LE = (array, offset) => {\n  return array[offset] | (array[offset + 1] << 8);\n};\n\nexport const readUInt32BE = (array, offset) => {\n  return (\n    (array[offset] << 24) |\n    (array[offset + 1] << 16) |\n    (array[offset + 2] << 8) |\n    array[offset + 3]\n  );\n};\n\nexport const readUInt32LE = (array, offset) => {\n  return (\n    array[offset] |\n    (array[offset + 1] << 8) |\n    (array[offset + 2] << 16) |\n    (array[offset + 3] << 24)\n  );\n};\n\nexport const uint8ArrayToHexString = (uint8Array) => {\n  return Array.from(uint8Array, (byte) =>\n    byte.toString(16).padStart(2, \"0\"),\n  ).join(\"\");\n};\n\nconst decoder = new TextDecoder(\"utf-8\");\n\nexport const uint8ArrayToString = (uint8Array) => {\n  return decoder.decode(uint8Array);\n};\n\nexport const concatenateUint8Arrays = (arrays) => {\n  const totalLength = arrays.reduce((length, arr) => length + arr.length, 0);\n  const concatenatedArray = new Uint8Array(totalLength);\n\n  let offset = 0;\n\n  arrays.forEach((arr) => {\n    concatenatedArray.set(arr, offset);\n    offset += arr.length;\n  });\n\n  return concatenatedArray;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C,OAAOD,KAAK,CAACC,MAAM,CAAC;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACF,KAAK,EAAEC,MAAM,KAAK;EAC7C,OAAQD,KAAK,CAACC,MAAM,CAAC,IAAI,CAAC,GAAID,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;AACjD,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACH,KAAK,EAAEC,MAAM,KAAK;EAC7C,OAAOD,KAAK,CAACC,MAAM,CAAC,GAAID,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE;AACjD,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAACJ,KAAK,EAAEC,MAAM,KAAK;EAC7C,OACGD,KAAK,CAACC,MAAM,CAAC,IAAI,EAAE,GACnBD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG,GACxBD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACxBD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;AAErB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAACL,KAAK,EAAEC,MAAM,KAAK;EAC7C,OACED,KAAK,CAACC,MAAM,CAAC,GACZD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAE,GACvBD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG,GACxBD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,IAAI,EAAG;AAE7B,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAIC,UAAU,IAAK;EACnD,OAAOC,KAAK,CAACC,IAAI,CAACF,UAAU,EAAGG,IAAI,IACjCA,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CACnC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACZ,CAAC;AAED,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;AAExC,OAAO,MAAMC,kBAAkB,GAAIT,UAAU,IAAK;EAChD,OAAOO,OAAO,CAACG,MAAM,CAACV,UAAU,CAAC;AACnC,CAAC;AAED,OAAO,MAAMW,sBAAsB,GAAIC,MAAM,IAAK;EAChD,MAAMC,WAAW,GAAGD,MAAM,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAKD,MAAM,GAAGC,GAAG,CAACD,MAAM,EAAE,CAAC,CAAC;EAC1E,MAAME,iBAAiB,GAAG,IAAIC,UAAU,CAACL,WAAW,CAAC;EAErD,IAAInB,MAAM,GAAG,CAAC;EAEdkB,MAAM,CAACO,OAAO,CAAEH,GAAG,IAAK;IACtBC,iBAAiB,CAACG,GAAG,CAACJ,GAAG,EAAEtB,MAAM,CAAC;IAClCA,MAAM,IAAIsB,GAAG,CAACD,MAAM;EACtB,CAAC,CAAC;EAEF,OAAOE,iBAAiB;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}