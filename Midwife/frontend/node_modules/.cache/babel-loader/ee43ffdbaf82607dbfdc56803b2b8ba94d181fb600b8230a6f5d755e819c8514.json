{"ast":null,"code":"import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n  ctx.closePath();\n};\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n    x1 = _ref.x1,\n    x2 = _ref.x2,\n    y1 = _ref.y1,\n    y2 = _ref.y2;\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\nvar renderGroup = function renderGroup() {\n  // noop\n};\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  if (cx === void 0) {\n    cx = 0;\n  }\n  if (cy === void 0) {\n    cy = 0;\n  }\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n    cx = _ref.cx,\n    cy = _ref.cy,\n    rx = _ref.rx,\n    ry = _ref.ry;\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm;\n\n  // Glyph encoding and positioning\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    color = _run$attributes.color,\n    opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(runAdvanceWidth, 0);\n};\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n    case 'end':\n      xTranslate = x - width;\n      break;\n    default:\n      xTranslate = x;\n      break;\n  }\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n    default:\n      yTranslate = y;\n      break;\n  }\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\n/**\n * Create pairs from array\n *\n * @template T\n * @param {T[]} values array\n * @returns {T[][]} pairs\n */\nvar pairs = function pairs(values) {\n  var result = [];\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n  return result;\n};\n\n/**\n * Parse svg-like points into number arrays\n *\n * @param {string} points string ex. \"20,30 50,60\"\n * @returns {number[][]} points array ex. [[20, 30], [50, 60]]\n */\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n  var mappedValues = values.map(parseFloat);\n  return pairs(mappedValues);\n};\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n    x = _node$props.x,\n    y = _node$props.y;\n  var _node$style = node.style,\n    width = _node$style.width,\n    height = _node$style.height,\n    opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$style = node.style,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2;\n\n  // Border top\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr);\n\n  // Border right\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height);\n\n  // Border bottom\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl);\n\n  // Border left\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n    value = transform.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n          scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'translate':\n      {\n        var x = value[0],\n          _value$ = value[1],\n          y = _value$ === void 0 ? 0 : _value$;\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n    case 'skew':\n      {\n        var xAngle = value[0],\n          yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\nvar _boundingBoxFns;\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n  return bounds;\n};\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\nvar _renderFns$1;\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(',').map(Number));\n};\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n};\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\nvar noop = function noop() {};\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$props15 = node.props,\n    viewBox = _node$props15.viewBox,\n    _node$props15$preserv = _node$props15.preserveAspectRatio,\n    preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n    meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n    _preserveAspectRatio$2 = preserveAspectRatio.align,\n    align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n    top = _node$box2.top,\n    left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\nvar black = {\n  value: [0, 0, 0],\n  opacity: 1\n};\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  if (!parsed) return black;\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar DEST_REGEXP = /^#.+/;\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n    xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n    _attachment$yOffset = attachment.yOffset,\n    yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n    width = attachment.width,\n    height = attachment.height,\n    image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n  ctx.restore();\n};\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n    descent = run.descent,\n    xAdvance = run.xAdvance;\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n  renderAttachments(ctx, run);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(xAdvance, 0);\n};\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step));\n\n    // Adjust step to fill entire width\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n  ctx.stroke(line.color);\n  ctx.restore();\n};\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n    renderRun(ctx, run, options);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n  ctx.restore();\n};\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _height = ch;\n    var _width = _height * ir;\n    var _yOffset = isNumeric(py) ? py : 0;\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _width2 = cw;\n    var _height2 = _width2 / ir;\n    var _xOffset2 = isNumeric(px) ? px : 0;\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n  if (options === void 0) {\n    options = {};\n  }\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n    width = _resolveObjectFit.width,\n    height = _resolveObjectFit.height,\n    xOffset = _resolveObjectFit.xOffset,\n    yOffset = _resolveObjectFit.yOffset;\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1';\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top,\n    width = _node$box.width,\n    height = _node$box.height,\n    _node$box$paddingLeft = _node$box.paddingLeft,\n    paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n    _node$box$paddingTop = _node$box.paddingTop,\n    paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n    _node$box$paddingRigh = _node$box.paddingRight,\n    paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n    _node$box$paddingBott = _node$box.paddingBottom,\n    paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n    _node$box$borderLeftW = _node$box.borderLeftWidth,\n    borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n    _node$box$borderTopWi = _node$box.borderTopWidth,\n    borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n    _node$box$borderRight = _node$box.borderRightWidth,\n    borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n    _node$box$borderBotto = _node$box.borderBottomWidth,\n    borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n    left = _node$box2.left,\n    top = _node$box2.top,\n    width = _node$box2.width,\n    height = _node$box2.height,\n    _node$box2$paddingLef = _node$box2.paddingLeft,\n    paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n    _node$box2$paddingTop = _node$box2.paddingTop,\n    paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n    _node$box2$paddingRig = _node$box2.paddingRight,\n    paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n    _node$box2$paddingBot = _node$box2.paddingBottom,\n    paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n    _node$box2$borderLeft = _node$box2.borderLeftWidth,\n    borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n    _node$box2$borderTopW = _node$box2.borderTopWidth,\n    borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n    _node$box2$borderRigh = _node$box2.borderRightWidth,\n    borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n    _node$box2$borderBott = _node$box2.borderBottomWidth,\n    borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n  // Padding top\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill();\n\n  // Padding left\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill();\n\n  // Padding right\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill();\n\n  // Padding bottom\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n    left = _node$box3.left,\n    top = _node$box3.top,\n    width = _node$box3.width,\n    height = _node$box3.height;\n  var _getMargin = getMargin(node.box),\n    _getMargin$marginLeft = _getMargin.marginLeft,\n    marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n    _getMargin$marginTop = _getMargin.marginTop,\n    marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n    _getMargin$marginRigh = _getMargin.marginRight,\n    marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n    _getMargin$marginBott = _getMargin.marginBottom,\n    marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n  // Margin top\n  ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n  // Margin left\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill();\n\n  // Margin right\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill();\n\n  // Margin bottom\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n    left = _node$box4.left,\n    top = _node$box4.top,\n    width = _node$box4.width,\n    height = _node$box4.height;\n  var _getMargin2 = getMargin(node.box),\n    _getMargin2$marginLef = _getMargin2.marginLeft,\n    marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n    _getMargin2$marginTop = _getMargin2.marginTop,\n    marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n    _getMargin2$marginRig = _getMargin2.marginRight,\n    marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n    _getMargin2$marginBot = _getMargin2.marginBottom,\n    marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n  ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  var c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr);\n\n  // Move down in case the margin exceedes the radius\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth);\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  var c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width;\n  var borderTopColor = style.borderTopColor,\n    borderTopWidth = style.borderTopWidth,\n    borderTopStyle = style.borderTopStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderBottomWidth = style.borderBottomWidth;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  var c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n\n  // Move left in case the margin exceedes the radius\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth));\n\n  // Clip inner right border edge\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth));\n\n  // Ellipse coefficients inner top right cap\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  var c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderRightColor = style.borderRightColor,\n    borderRightStyle = style.borderRightStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  var c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n\n  // Move up in case the margin exceedes the radius\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth);\n\n  // Clip inner bottom border edge\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  var c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n    borderBottomStyle = style.borderBottomStyle,\n    borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderLeftWidth = style.borderLeftWidth,\n    borderBottomWidth = style.borderBottomWidth;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  var c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth));\n\n  // Clip inner left border edge\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth));\n\n  // Ellipse coefficients inner bottom left cap\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  var c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n    borderLeftStyle = style.borderLeftStyle,\n    borderLeftWidth = style.borderLeftWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height,\n    borderTopWidth = _node$box.borderTopWidth,\n    borderLeftWidth = _node$box.borderLeftWidth,\n    borderRightWidth = _node$box.borderRightWidth,\n    borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n    opacity = _node$style.opacity,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n    _node$style$borderTop3 = _node$style.borderTopColor,\n    borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n    _node$style$borderTop4 = _node$style.borderTopStyle,\n    borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n    _node$style$borderLef = _node$style.borderLeftColor,\n    borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n    _node$style$borderLef2 = _node$style.borderLeftStyle,\n    borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n    _node$style$borderRig = _node$style.borderRightColor,\n    borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n    _node$style$borderRig2 = _node$style.borderRightStyle,\n    borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n    _node$style$borderBot3 = _node$style.borderBottomColor,\n    borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n    _node$style$borderBot4 = _node$style.borderBottomStyle,\n    borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n  ctx.restore();\n};\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var src = props.src || props.href;\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\nvar _renderFns;\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n  var children = node.children || [];\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n  children.forEach(renderChild);\n  ctx.restore();\n};\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\n/* eslint-disable no-param-reassign */\n\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\nvar addMetadata = function addMetadata(ctx, doc) {\n  var _props$creator, _props$producer;\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = (_props$creator = props.creator) != null ? _props$creator : 'react-pdf';\n  var producer = (_props$producer = props.producer) != null ? _props$producer : 'react-pdf';\n  var creationDate = props.creationDate || new Date();\n  var modificationDate = props.modificationDate || null;\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n  setProp('CreationDate', creationDate);\n  setProp('ModificationDate', modificationDate);\n};\n\n/* eslint-disable no-param-reassign */\n\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n  if (bookmark) {\n    var title = bookmark.title,\n      parent = bookmark.parent,\n      expanded = bookmark.expanded,\n      zoom = bookmark.zoom,\n      fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\nexport { render as default };","map":{"version":3,"names":["P","isNil","matchPercent","absPath","parsePath","normalizePath","colorString","_extends","renderPath","ctx","node","_node$props","d","props","path","KAPPA$3","Math","sqrt","renderRect","_node$props2","_node$props3","_node$props4","_node$props5","_node$props6","x","y","rx","ry","width","height","krx","kry","moveTo","lineTo","bezierCurveTo","closePath","renderLine$1","renderLine","_ref","x1","x2","y1","y2","renderGroup","KAPPA$2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderGlyphs","glyphs","positions","options","scale","_fontSize","unitsPerEm","_font","font","advanceWidthScale","encodedGlyphs","encodeGlyphs","encodedPositions","map","pos","i","xAdvance","yAdvance","xOffset","yOffset","advanceWidth","_glyphs","renderRun$1","renderRun","run","runAdvanceWidth","_run$attributes","attributes","fontSize","color","opacity","fillColor","fillOpacity","sbix","COLR","CPAL","save","translate","ascent","length","position","glyph","render","restore","name","error","console","log","renderSpan","line","textAnchor","dominantBaseline","_line$box","_line$box2","_line$runs$","_line$runs$2","_line$runs$2$attribut","box","runs","xHeight","descent","capHeight","xTranslate","yTranslate","forEach","renderSvgText","children","span","lines","pairs","values","result","push","parsePoints","points","trim","replace","split","slice","mappedValues","parseFloat","drawPolyline","p","renderPolyline","renderPolygon","renderImage$1","renderImage","image","data","_node$style","style","paddingTop","paddingLeft","warn","href","KAPPA$1","clipNode","_node$box","top","left","_node$style$borderTop","borderTopLeftRadius","_node$style$borderTop2","borderTopRightRadius","_node$style$borderBot","borderBottomRightRadius","_node$style$borderBot2","borderBottomLeftRadius","rtr","min","ctr","rbr","cbr","rbl","cbl","rtl","ctl","clip","applySingleTransformation","transform","origin","operation","value","scaleX","scaleY","angle","rotate","_value$","xAngle","yAngle","skew","apply","applyTransformations","operations","_boundingBoxFns","getPathBoundingBox","bounds","Infinity","l","j","getCircleBoundingBox","getEllipseBoundingBox","_node$props7","_node$props8","getLineBoundingBox","_node$props9","_node$props10","_node$props11","_node$props12","max","getRectBoundingBox","_node$props13","_node$props14","_node$props15","_node$props16","concat","getPolylineBoundingBox","_node$props17","xValues","yValues","boundingBoxFns","Rect","Line","Path","Circle","Ellipse","Polygon","Polyline","getBoundingBox","boundingBoxFn","type","_renderFns$1","setStrokeWidth","lineWidth","strokeWidth","setStrokeColor","strokeColor","stroke","setOpacity","setFillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","strokeLinejoin","setLineCap","lineCap","strokeLinecap","setLineDash","strokeDasharray","dash","Number","hasLinearGradientFill","_node$props9$fill","fill","LinearGradient","hasRadialGradientFill","_node$props10$fill","RadialGradient","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","setFill","draw","fillAndStroke","fillRule","noop","renderFns$1","Tspan","TextInstance","G","Text","Image","renderNode$1","renderNode","renderFn","drawNode","clipPath","child","drawChildren","resolveAspectRatio","viewBox","_node$props15$preserv","preserveAspectRatio","_preserveAspectRatio$","meetOrSlice","_preserveAspectRatio$2","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","moveToOrigin","_node$box2","renderSvg","black","parseColor","hex","parsed","get","to","DEST_REGEXP","isSrcId$1","isSrcId","src","match","renderAttachment","attachment","_attachment$xOffset","_attachment$yOffset","fit","valign","renderAttachments","space","glyphForCodePoint","objectReplacement","attachmentAdvance","id","link","outlineRuns","rect","goTo","renderBackground$1","renderBackground","backgroundColor","renderDecorationLine","test","dist","step","stepCount","floor","remainingWidth","adjustment","cp1y","cp2y","lineAscent","outlineLines","isLastRun","overflowRight","backgroundRect","_i","decorationLines","decorationLine","renderBlock","block","renderText","_node$box3","blocks","initialY","offsetX","alignOffset","renderPage","dpi","userUnit","addPage","size","margin","renderNote","_node$children","_node$style2","borderWidth","note","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","percent","pyv","_height","_width","_yOffset","_xOffset","applyNoneObjectFit","applyCoverObjectFit","_width2","_height2","_xOffset2","_yOffset2","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","_node$style3","_node$style4","objectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","imageCache","Map","_resolveObjectFit","cacheKey","key","embedImage","set","imageOpacity","JSON","stringify","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","debugContent","_node$box$paddingLeft","_node$box$paddingTop","_node$box$paddingRigh","_node$box$paddingBott","_node$box$borderLeftW","borderLeftWidth","_node$box$borderTopWi","borderTopWidth","_node$box$borderRight","borderRightWidth","_node$box$borderBotto","borderBottomWidth","debugPadding","_node$box2$paddingLef","_node$box2$paddingTop","_node$box2$paddingRig","_node$box2$paddingBot","_node$box2$borderLeft","_node$box2$borderTopW","_node$box2$borderRigh","_node$box2$borderBott","getMargin","marginLeft","marginTop","marginRight","marginBottom","debugMargin","_getMargin","_getMargin$marginLeft","_getMargin$marginTop","_getMargin$marginRigh","_getMargin$marginBott","debugText","_node$box4","_getMargin2","_getMargin2$marginLef","_getMargin2$marginTop","_getMargin2$marginRig","_getMargin2$marginBot","roundedWidth","round","roundedHeight","text","debugOrigin","circle","renderDebug","debug","availableMethods","painter","reduce","acc","prop","_extends2","arguments","renderCanvas","availableWidth","availableHeight","paint","KAPPA","clipBorderTop","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","_trSlope","fillBorderTop","borderTopColor","borderTopStyle","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","borderRightColor","borderRightStyle","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","borderBottomColor","borderBottomStyle","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","_trSlope2","fillBorderLeft","borderLeftColor","borderLeftStyle","shouldRenderBorders","renderBorders","_node$style$borderTop3","_node$style$borderTop4","_node$style$borderLef","_node$style$borderLef2","_node$style$borderRig","_node$style$borderRig2","_node$style$borderBot3","_node$style$borderBot4","drawBackground","nodeOpacity","hasBackground","setLink","isId","method","setDestination","addNamedDestination","_renderFns","isRecursiveNode","Svg","renderChildren","renderChild","renderFns","Note","Canvas","Link","overflowHidden","overflow","shouldRenderChildren","Page","setPDFMetadata","target","info","addMetadata","doc","_props$creator","_props$producer","setProp","title","author","subject","keywords","creator","producer","creationDate","Date","modificationDate","addNodeBookmark","pageNumber","registry","bookmark","parent","expanded","zoom","outline","instance","addItem","ref","addBookmarks","root","pages","page","end","default"],"sources":["E:/SLIIT/2nd Year/Y2S2/ITP/Project/MOH-Midwife-3/MOH-Midwife-3/midwife/frontend/node_modules/@react-pdf/render/lib/index.js"],"sourcesContent":["import * as P from '@react-pdf/primitives';\nimport { isNil, matchPercent } from '@react-pdf/fns';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\nimport normalizePath from 'normalize-svg-path';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\n\nvar renderPath = function renderPath(ctx, node) {\n  var _node$props;\n  var d = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d;\n  if (d) ctx.path(node.props.d);\n};\n\nvar KAPPA$3 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar renderRect = function renderRect(ctx, node) {\n  var _node$props, _node$props2, _node$props3, _node$props4, _node$props5, _node$props6;\n  var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n  var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n  var rx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.rx) || 0;\n  var ry = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.ry) || 0;\n  var width = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.width) || 0;\n  var height = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.height) || 0;\n  if (!width || !height) return;\n  if (rx && ry) {\n    var krx = rx * KAPPA$3;\n    var kry = ry * KAPPA$3;\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(x - rx + width + krx, y, x + width, y + ry - kry, x + width, y + ry);\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(x + width, y + height - ry + kry, x - rx + width + krx, y + height, x - rx + width, y + height);\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(x + rx - krx, y + height, x, y + height - ry + kry, x, y + height - ry);\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n  ctx.closePath();\n};\n\nvar renderLine$1 = function renderLine(ctx, node) {\n  var _ref = node.props || {},\n    x1 = _ref.x1,\n    x2 = _ref.x2,\n    y1 = _ref.y1,\n    y2 = _ref.y2;\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n};\n\nvar renderGroup = function renderGroup() {\n  // noop\n};\n\nvar KAPPA$2 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar drawEllipse = function drawEllipse(ctx, cx, cy, rx, ry) {\n  if (cx === void 0) {\n    cx = 0;\n  }\n  if (cy === void 0) {\n    cy = 0;\n  }\n  var x = cx - rx;\n  var y = cy - ry;\n  var ox = rx * KAPPA$2;\n  var oy = ry * KAPPA$2;\n  var xe = x + rx * 2;\n  var ye = y + ry * 2;\n  var xm = x + rx;\n  var ym = y + ry;\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\nvar renderEllipse = function renderEllipse(ctx, node) {\n  var _ref = node.props || {},\n    cx = _ref.cx,\n    cy = _ref.cy,\n    rx = _ref.rx,\n    ry = _ref.ry;\n  drawEllipse(ctx, cx, cy, rx, ry);\n};\n\nvar renderCircle = function renderCircle(ctx, node) {\n  var _node$props, _node$props2, _node$props3;\n  var cx = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.cx;\n  var cy = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.cy;\n  var r = (_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.r;\n  drawEllipse(ctx, cx, cy, r, r);\n};\n\nvar renderGlyphs = function renderGlyphs(ctx, glyphs, positions, x, y, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var scale = 1000 / ctx._fontSize;\n  var unitsPerEm = ctx._font.font.unitsPerEm || 1000;\n  var advanceWidthScale = 1000 / unitsPerEm;\n\n  // Glyph encoding and positioning\n  var encodedGlyphs = ctx._font.encodeGlyphs(glyphs);\n  var encodedPositions = positions.map(function (pos, i) {\n    return {\n      xAdvance: pos.xAdvance * scale,\n      yAdvance: pos.yAdvance * scale,\n      xOffset: pos.xOffset,\n      yOffset: pos.yOffset,\n      advanceWidth: glyphs[i].advanceWidth * advanceWidthScale\n    };\n  });\n  return ctx._glyphs(encodedGlyphs, encodedPositions, x, y, options);\n};\n\nvar renderRun$1 = function renderRun(ctx, run) {\n  var runAdvanceWidth = run.xAdvance;\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    color = _run$attributes.color,\n    opacity = _run$attributes.opacity;\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(runAdvanceWidth, 0);\n};\nvar renderSpan = function renderSpan(ctx, line, textAnchor, dominantBaseline) {\n  var _line$box, _line$box2, _line$runs$, _line$runs$2, _line$runs$2$attribut;\n  ctx.save();\n  var x = ((_line$box = line.box) === null || _line$box === void 0 ? void 0 : _line$box.x) || 0;\n  var y = ((_line$box2 = line.box) === null || _line$box2 === void 0 ? void 0 : _line$box2.y) || 0;\n  var font = (_line$runs$ = line.runs[0]) === null || _line$runs$ === void 0 ? void 0 : _line$runs$.attributes.font;\n  var scale = ((_line$runs$2 = line.runs[0]) === null || _line$runs$2 === void 0 ? void 0 : (_line$runs$2$attribut = _line$runs$2.attributes) === null || _line$runs$2$attribut === void 0 ? void 0 : _line$runs$2$attribut.scale) || 1;\n  var width = line.xAdvance;\n  var ascent = font.ascent * scale;\n  var xHeight = font.xHeight * scale;\n  var descent = font.descent * scale;\n  var capHeight = font.capHeight * scale;\n  var xTranslate = x;\n  var yTranslate = y;\n  switch (textAnchor) {\n    case 'middle':\n      xTranslate = x - width / 2;\n      break;\n    case 'end':\n      xTranslate = x - width;\n      break;\n    default:\n      xTranslate = x;\n      break;\n  }\n  switch (dominantBaseline) {\n    case 'middle':\n    case 'central':\n      yTranslate = y + capHeight / 2;\n      break;\n    case 'hanging':\n      yTranslate = y + capHeight;\n      break;\n    case 'mathematical':\n      yTranslate = y + xHeight;\n      break;\n    case 'text-after-edge':\n      yTranslate = y + descent;\n      break;\n    case 'text-before-edge':\n      yTranslate = y + ascent;\n      break;\n    default:\n      yTranslate = y;\n      break;\n  }\n  ctx.translate(xTranslate, yTranslate);\n  line.runs.forEach(function (run) {\n    return renderRun$1(ctx, run);\n  });\n  ctx.restore();\n};\nvar renderSvgText = function renderSvgText(ctx, node) {\n  node.children.forEach(function (span) {\n    return renderSpan(ctx, span.lines[0], span.props.textAnchor, span.props.dominantBaseline);\n  });\n};\n\n/**\n * Create pairs from array\n *\n * @template T\n * @param {T[]} values array\n * @returns {T[][]} pairs\n */\nvar pairs = function pairs(values) {\n  var result = [];\n  for (var i = 0; i < values.length; i += 2) {\n    result.push([values[i], values[i + 1]]);\n  }\n  return result;\n};\n\n/**\n * Parse svg-like points into number arrays\n *\n * @param {string} points string ex. \"20,30 50,60\"\n * @returns {number[][]} points array ex. [[20, 30], [50, 60]]\n */\nvar parsePoints = function parsePoints(points) {\n  var values = (points || '').trim().replace(/,/g, ' ').replace(/(\\d)-(\\d)/g, '$1 -$2').split(/\\s+/);\n  if (values.length % 2 !== 0) {\n    values = values.slice(0, -1);\n  }\n  var mappedValues = values.map(parseFloat);\n  return pairs(mappedValues);\n};\n\nvar drawPolyline = function drawPolyline(ctx, points) {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(function (p) {\n      return ctx.lineTo(p[0], p[1]);\n    });\n  }\n};\nvar renderPolyline = function renderPolyline(ctx, node) {\n  var points = parsePoints(node.props.points || '');\n  drawPolyline(ctx, points);\n};\n\nvar renderPolygon = function renderPolygon(ctx, node) {\n  renderPolyline(ctx, node);\n  ctx.closePath();\n};\n\nvar renderImage$1 = function renderImage(ctx, node) {\n  if (!node.image.data) return;\n  var _node$props = node.props,\n    x = _node$props.x,\n    y = _node$props.y;\n  var _node$style = node.style,\n    width = _node$style.width,\n    height = _node$style.height,\n    opacity = _node$style.opacity;\n  var paddingTop = node.box.paddingLeft || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  if (width === 0 || height === 0) {\n    console.warn(\"Image with src '\" + node.props.href + \"' skipped due to invalid dimensions\");\n    return;\n  }\n  ctx.save();\n  ctx.fillOpacity(opacity || 1).image(node.image.data, x + paddingLeft, y + paddingTop, {\n    width: width,\n    height: height\n  });\n  ctx.restore();\n};\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nvar KAPPA$1 = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipNode = function clipNode(ctx, node) {\n  if (!node.style) return;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$style = node.style,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2;\n\n  // Border top\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var ctr = rtr * (1.0 - KAPPA$1);\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - ctr, top, left + width, top + ctr, left + width, top + rtr);\n\n  // Border right\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var cbr = rbr * (1.0 - KAPPA$1);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - cbr, left + width - cbr, top + height, left + width - rbr, top + height);\n\n  // Border bottom\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  var cbl = rbl * (1.0 - KAPPA$1);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + cbl, top + height, left, top + height - cbl, left, top + height - rbl);\n\n  // Border left\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var ctl = rtl * (1.0 - KAPPA$1);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n};\n\nvar applySingleTransformation = function applySingleTransformation(ctx, transform, origin) {\n  var operation = transform.operation,\n    value = transform.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var scaleX = value[0],\n          scaleY = value[1];\n        ctx.scale(scaleX, scaleY, {\n          origin: origin\n        });\n        break;\n      }\n    case 'rotate':\n      {\n        var angle = value[0];\n        ctx.rotate(angle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'translate':\n      {\n        var x = value[0],\n          _value$ = value[1],\n          y = _value$ === void 0 ? 0 : _value$;\n        ctx.translate(x, y, {\n          origin: origin\n        });\n        break;\n      }\n    case 'skew':\n      {\n        var xAngle = value[0],\n          yAngle = value[1];\n        ctx.skew(xAngle, yAngle, {\n          origin: origin\n        });\n        break;\n      }\n    case 'matrix':\n      {\n        ctx.transform.apply(ctx, value);\n        break;\n      }\n    default:\n      {\n        console.error(\"Transform operation: '\" + operation + \"' doesn't supported\");\n      }\n  }\n};\nvar applyTransformations = function applyTransformations(ctx, node) {\n  var _node$style, _node$props;\n  if (!node.origin) return;\n  var origin = [node.origin.left, node.origin.top];\n  var operations = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.transform) || ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.transform) || [];\n  operations.forEach(function (operation) {\n    applySingleTransformation(ctx, operation, origin);\n  });\n};\n\nvar _boundingBoxFns;\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nvar getPathBoundingBox = function getPathBoundingBox(node) {\n  var _node$props;\n  var path = normalizePath(absPath(parsePath(((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.d) || '')));\n  if (!path.length) return [0, 0, 0, 0];\n  var bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  for (var i = 0, l = path.length; i < l; i += 1) {\n    var points = path[i].slice(1);\n    for (var j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n  return bounds;\n};\nvar getCircleBoundingBox = function getCircleBoundingBox(node) {\n  var _node$props2, _node$props3, _node$props4;\n  var r = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.r) || 0;\n  var cx = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.cx) || 0;\n  var cy = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.cy) || 0;\n  return [cx - r, cy - r, cx + r, cy + r];\n};\nvar getEllipseBoundingBox = function getEllipseBoundingBox(node) {\n  var _node$props5, _node$props6, _node$props7, _node$props8;\n  var cx = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.cx) || 0;\n  var cy = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.cy) || 0;\n  var rx = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.rx) || 0;\n  var ry = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.ry) || 0;\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\nvar getLineBoundingBox = function getLineBoundingBox(node) {\n  var _node$props9, _node$props10, _node$props11, _node$props12;\n  var x1 = ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : _node$props9.x1) || 0;\n  var y1 = ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : _node$props10.y1) || 0;\n  var x2 = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.x2) || 0;\n  var y2 = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.y2) || 0;\n  return [Math.min(x1, x2), Math.min(y1, y2), Math.max(x1, x2), Math.max(y1, y2)];\n};\nvar getRectBoundingBox = function getRectBoundingBox(node) {\n  var _node$props13, _node$props14, _node$props15, _node$props16;\n  var x = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.x) || 0;\n  var y = ((_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.y) || 0;\n  var width = ((_node$props15 = node.props) === null || _node$props15 === void 0 ? void 0 : _node$props15.width) || 0;\n  var height = ((_node$props16 = node.props) === null || _node$props16 === void 0 ? void 0 : _node$props16.height) || 0;\n  return [x, y, x + width, y + height];\n};\nvar max = function max(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\nvar min = function min(values) {\n  return Math.min.apply(Math, [Infinity].concat(values));\n};\nvar getPolylineBoundingBox = function getPolylineBoundingBox(node) {\n  var _node$props17;\n  var points = parsePoints(((_node$props17 = node.props) === null || _node$props17 === void 0 ? void 0 : _node$props17.points) || []);\n  var xValues = points.map(function (p) {\n    return p[0];\n  });\n  var yValues = points.map(function (p) {\n    return p[1];\n  });\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\nvar boundingBoxFns = (_boundingBoxFns = {}, _boundingBoxFns[P.Rect] = getRectBoundingBox, _boundingBoxFns[P.Line] = getLineBoundingBox, _boundingBoxFns[P.Path] = getPathBoundingBox, _boundingBoxFns[P.Circle] = getCircleBoundingBox, _boundingBoxFns[P.Ellipse] = getEllipseBoundingBox, _boundingBoxFns[P.Polygon] = getPolylineBoundingBox, _boundingBoxFns[P.Polyline] = getPolylineBoundingBox, _boundingBoxFns);\nvar getBoundingBox = function getBoundingBox(node) {\n  var boundingBoxFn = boundingBoxFns[node.type];\n  return boundingBoxFn ? boundingBoxFn(node) : [0, 0, 0, 0];\n};\n\nvar _renderFns$1;\nvar setStrokeWidth = function setStrokeWidth(ctx, node) {\n  var _node$props;\n  var lineWidth = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.strokeWidth) || 0;\n  if (lineWidth) ctx.lineWidth(lineWidth);\n};\nvar setStrokeColor = function setStrokeColor(ctx, node) {\n  var _node$props2;\n  var strokeColor = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.stroke) || null;\n  if (strokeColor) ctx.strokeColor(strokeColor);\n};\nvar setOpacity = function setOpacity(ctx, node) {\n  var _node$props3;\n  var opacity = ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.opacity) || null;\n  if (!isNil(opacity)) ctx.opacity(opacity);\n};\nvar setFillOpacity = function setFillOpacity(ctx, node) {\n  var _node$props4;\n  var fillOpacity = ((_node$props4 = node.props) === null || _node$props4 === void 0 ? void 0 : _node$props4.fillOpacity) || null;\n  if (!isNil(fillOpacity)) ctx.fillOpacity(fillOpacity);\n};\nvar setStrokeOpacity = function setStrokeOpacity(ctx, node) {\n  var _node$props5;\n  var strokeOpacity = ((_node$props5 = node.props) === null || _node$props5 === void 0 ? void 0 : _node$props5.strokeOpacity) || null;\n  if (!isNil(strokeOpacity)) ctx.strokeOpacity(strokeOpacity);\n};\nvar setLineJoin = function setLineJoin(ctx, node) {\n  var _node$props6;\n  var lineJoin = ((_node$props6 = node.props) === null || _node$props6 === void 0 ? void 0 : _node$props6.strokeLinejoin) || null;\n  if (lineJoin) ctx.lineJoin(lineJoin);\n};\nvar setLineCap = function setLineCap(ctx, node) {\n  var _node$props7;\n  var lineCap = ((_node$props7 = node.props) === null || _node$props7 === void 0 ? void 0 : _node$props7.strokeLinecap) || null;\n  if (lineCap) ctx.lineCap(lineCap);\n};\nvar setLineDash = function setLineDash(ctx, node) {\n  var _node$props8;\n  var value = ((_node$props8 = node.props) === null || _node$props8 === void 0 ? void 0 : _node$props8.strokeDasharray) || null;\n  if (value) ctx.dash(value.split(',').map(Number));\n};\nvar hasLinearGradientFill = function hasLinearGradientFill(node) {\n  var _node$props9, _node$props9$fill;\n  return ((_node$props9 = node.props) === null || _node$props9 === void 0 ? void 0 : (_node$props9$fill = _node$props9.fill) === null || _node$props9$fill === void 0 ? void 0 : _node$props9$fill.type) === P.LinearGradient;\n};\nvar hasRadialGradientFill = function hasRadialGradientFill(node) {\n  var _node$props10, _node$props10$fill;\n  return ((_node$props10 = node.props) === null || _node$props10 === void 0 ? void 0 : (_node$props10$fill = _node$props10.fill) === null || _node$props10$fill === void 0 ? void 0 : _node$props10$fill.type) === P.RadialGradient;\n};\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nvar setLinearGradientFill = function setLinearGradientFill(ctx, node) {\n  var _node$props11;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props11 = node.props) === null || _node$props11 === void 0 ? void 0 : _node$props11.fill) || null;\n  var x1 = gradient.props.x1 || 0;\n  var y1 = gradient.props.y1 || 0;\n  var x2 = gradient.props.x2 || 1;\n  var y2 = gradient.props.y2 || 0;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gx1 = m0 * x1 + m4;\n  var gy1 = m3 * y1 + m5;\n  var gx2 = m0 * x2 + m4;\n  var gy2 = m3 * y2 + m5;\n  var grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nvar setRadialGradientFill = function setRadialGradientFill(ctx, node) {\n  var _node$props12;\n  var bbox = getBoundingBox(node);\n  var gradient = ((_node$props12 = node.props) === null || _node$props12 === void 0 ? void 0 : _node$props12.fill) || null;\n  var cx = gradient.props.cx || 0.5;\n  var cy = gradient.props.cy || 0.5;\n  var fx = gradient.props.fx || cx;\n  var fy = gradient.props.fy || cy;\n  var r = gradient.props.r || 0.5;\n  var m0 = bbox[2] - bbox[0];\n  var m3 = bbox[3] - bbox[1];\n  var m4 = bbox[0];\n  var m5 = bbox[1];\n  var gr = r * m0;\n  var gcx = m0 * cx + m4;\n  var gcy = m3 * cy + m5;\n  var gfx = m0 * fx + m4;\n  var gfy = m3 * fy + m5;\n  var grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n  gradient.children.forEach(function (stop) {\n    grad.stop(stop.props.offset, stop.props.stopColor, stop.props.stopOpacity);\n  });\n  ctx.fill(grad);\n};\nvar setFillColor = function setFillColor(ctx, node) {\n  var _node$props13;\n  var fillColor = ((_node$props13 = node.props) === null || _node$props13 === void 0 ? void 0 : _node$props13.fill) || null;\n  if (fillColor) ctx.fillColor(fillColor);\n};\nvar setFill = function setFill(ctx, node) {\n  if (hasLinearGradientFill(node)) return setLinearGradientFill(ctx, node);\n  if (hasRadialGradientFill(node)) return setRadialGradientFill(ctx, node);\n  return setFillColor(ctx, node);\n};\nvar draw = function draw(ctx, node) {\n  var props = node.props || {};\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n};\nvar noop = function noop() {};\nvar renderFns$1 = (_renderFns$1 = {}, _renderFns$1[P.Tspan] = noop, _renderFns$1[P.TextInstance] = noop, _renderFns$1[P.Path] = renderPath, _renderFns$1[P.Rect] = renderRect, _renderFns$1[P.Line] = renderLine$1, _renderFns$1[P.G] = renderGroup, _renderFns$1[P.Text] = renderSvgText, _renderFns$1[P.Circle] = renderCircle, _renderFns$1[P.Image] = renderImage$1, _renderFns$1[P.Ellipse] = renderEllipse, _renderFns$1[P.Polygon] = renderPolygon, _renderFns$1[P.Polyline] = renderPolyline, _renderFns$1);\nvar renderNode$1 = function renderNode(ctx, node) {\n  var renderFn = renderFns$1[node.type];\n  if (renderFns$1) {\n    renderFn(ctx, node);\n  } else {\n    console.warn(\"SVG node of type \" + node.type + \" is not currenty supported\");\n  }\n};\nvar drawNode = function drawNode(ctx, node) {\n  setLineCap(ctx, node);\n  setLineDash(ctx, node);\n  setLineJoin(ctx, node);\n  setStrokeWidth(ctx, node);\n  setStrokeColor(ctx, node);\n  setFill(ctx, node);\n  setStrokeOpacity(ctx, node);\n  setFillOpacity(ctx, node);\n  setOpacity(ctx, node);\n  applyTransformations(ctx, node);\n  renderNode$1(ctx, node);\n  draw(ctx, node);\n};\nvar clipPath = function clipPath(ctx, node) {\n  var _node$props14;\n  var value = (_node$props14 = node.props) === null || _node$props14 === void 0 ? void 0 : _node$props14.clipPath;\n  if (value) {\n    var children = value.children || [];\n    children.forEach(function (child) {\n      return renderNode$1(ctx, child);\n    });\n    ctx.clip();\n  }\n};\nvar drawChildren = function drawChildren(ctx, node) {\n  var children = node.children || [];\n  children.forEach(function (child) {\n    ctx.save();\n    clipPath(ctx, child);\n    drawNode(ctx, child);\n    drawChildren(ctx, child);\n    ctx.restore();\n  });\n};\nvar resolveAspectRatio = function resolveAspectRatio(ctx, node) {\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var _node$props15 = node.props,\n    viewBox = _node$props15.viewBox,\n    _node$props15$preserv = _node$props15.preserveAspectRatio,\n    preserveAspectRatio = _node$props15$preserv === void 0 ? {} : _node$props15$preserv;\n  var _preserveAspectRatio$ = preserveAspectRatio.meetOrSlice,\n    meetOrSlice = _preserveAspectRatio$ === void 0 ? 'meet' : _preserveAspectRatio$,\n    _preserveAspectRatio$2 = preserveAspectRatio.align,\n    align = _preserveAspectRatio$2 === void 0 ? 'xMidYMid' : _preserveAspectRatio$2;\n  if (viewBox == null || width == null || height == null) return;\n  var x = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minX) || 0;\n  var y = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.minY) || 0;\n  var logicalWidth = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxX) || width;\n  var logicalHeight = (viewBox === null || viewBox === void 0 ? void 0 : viewBox.maxY) || height;\n  var logicalRatio = logicalWidth / logicalHeight;\n  var physicalRatio = width / height;\n  var scaleX = width / logicalWidth;\n  var scaleY = height / logicalHeight;\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return;\n  }\n  if (logicalRatio < physicalRatio && meetOrSlice === 'meet' || logicalRatio >= physicalRatio && meetOrSlice === 'slice') {\n    ctx.scale(scaleY, scaleY);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height) / 2, -y);\n        break;\n      default:\n        ctx.translate(-x - (logicalWidth - width * logicalHeight / height), -y);\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width) / 2);\n        break;\n      default:\n        ctx.translate(-x, -y - (logicalHeight - height * logicalWidth / width));\n    }\n  }\n};\nvar moveToOrigin = function moveToOrigin(ctx, node) {\n  var _node$box2 = node.box,\n    top = _node$box2.top,\n    left = _node$box2.left;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingTop = node.box.paddingTop || 0;\n  ctx.translate(left + paddingLeft, top + paddingTop);\n};\nvar renderSvg = function renderSvg(ctx, node) {\n  ctx.save();\n  clipNode(ctx, node);\n  moveToOrigin(ctx, node);\n  resolveAspectRatio(ctx, node);\n  drawChildren(ctx, node);\n  ctx.restore();\n};\n\nvar black = {\n  value: [0, 0, 0],\n  opacity: 1\n};\nvar parseColor = function parseColor(hex) {\n  var parsed = colorString.get(hex);\n  if (!parsed) return black;\n  var value = colorString.to.hex(parsed.value.slice(0, 3));\n  var opacity = parsed.value[3];\n  return {\n    value: value,\n    opacity: opacity\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar DEST_REGEXP = /^#.+/;\nvar isSrcId$1 = function isSrcId(src) {\n  return src.match(DEST_REGEXP);\n};\nvar renderAttachment = function renderAttachment(ctx, attachment) {\n  var _attachment$xOffset = attachment.xOffset,\n    xOffset = _attachment$xOffset === void 0 ? 0 : _attachment$xOffset,\n    _attachment$yOffset = attachment.yOffset,\n    yOffset = _attachment$yOffset === void 0 ? 0 : _attachment$yOffset,\n    width = attachment.width,\n    height = attachment.height,\n    image = attachment.image;\n  ctx.translate(-width + xOffset, -height + yOffset);\n  ctx.image(image, 0, 0, {\n    fit: [width, height],\n    align: 'center',\n    valign: 'bottom'\n  });\n};\nvar renderAttachments = function renderAttachments(ctx, run) {\n  ctx.save();\n  var font = run.attributes.font;\n  var space = font.glyphForCodePoint(0x20);\n  var objectReplacement = font.glyphForCodePoint(0xfffc);\n  var attachmentAdvance = 0;\n  for (var i = 0; i < run.glyphs.length; i += 1) {\n    var position = run.positions[i];\n    var glyph = run.glyphs[i];\n    attachmentAdvance += position.xAdvance || 0;\n    if (glyph.id === objectReplacement.id && run.attributes.attachment) {\n      ctx.translate(attachmentAdvance, position.yOffset || 0);\n      renderAttachment(ctx, run.attributes.attachment);\n      run.glyphs[i] = space;\n      attachmentAdvance = 0;\n    }\n  }\n  ctx.restore();\n};\nvar renderRun = function renderRun(ctx, run, options) {\n  var _run$attributes = run.attributes,\n    font = _run$attributes.font,\n    fontSize = _run$attributes.fontSize,\n    link = _run$attributes.link;\n  var color = parseColor(run.attributes.color);\n  var opacity = isNil(run.attributes.opacity) ? color.opacity : run.attributes.opacity;\n  var height = run.height,\n    descent = run.descent,\n    xAdvance = run.xAdvance;\n  if (options.outlineRuns) {\n    ctx.rect(0, -height, xAdvance, height).stroke();\n  }\n  ctx.fillColor(color.value);\n  ctx.fillOpacity(opacity);\n  if (link) {\n    if (isSrcId$1(link)) {\n      ctx.goTo(0, -height - descent, xAdvance, height, link.slice(1));\n    } else {\n      ctx.link(0, -height - descent, xAdvance, height, link);\n    }\n  }\n  renderAttachments(ctx, run);\n  if (font.sbix || font.COLR && font.CPAL) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n    for (var i = 0; i < run.glyphs.length; i += 1) {\n      var position = run.positions[i];\n      var glyph = run.glyphs[i];\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n      glyph.render(ctx, fontSize);\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n    try {\n      renderGlyphs(ctx, run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ctx.translate(xAdvance, 0);\n};\nvar renderBackground$1 = function renderBackground(ctx, rect, backgroundColor) {\n  var color = parseColor(backgroundColor);\n  ctx.save();\n  ctx.fillOpacity(color.opacity);\n  ctx.rect(rect.x, rect.y, rect.width, rect.height);\n  ctx.fill(color.value);\n  ctx.restore();\n};\nvar renderDecorationLine = function renderDecorationLine(ctx, line) {\n  ctx.save();\n  ctx.lineWidth(line.rect.height);\n  ctx.strokeOpacity(line.opacity);\n  if (/dashed/.test(line.style)) {\n    ctx.dash(3 * line.rect.height);\n  } else if (/dotted/.test(line.style)) {\n    ctx.dash(line.rect.height);\n  }\n  if (/wavy/.test(line.style)) {\n    var dist = Math.max(2, line.rect.height);\n    var step = 1.1 * dist;\n    var stepCount = Math.floor(line.rect.width / (2 * step));\n\n    // Adjust step to fill entire width\n    var remainingWidth = line.rect.width - stepCount * 2 * step;\n    var adjustment = remainingWidth / stepCount / 2;\n    step += adjustment;\n    var cp1y = line.rect.y + dist;\n    var cp2y = line.rect.y - dist;\n    var x = line.rect.x;\n    ctx.moveTo(line.rect.x, line.rect.y);\n    for (var i = 0; i < stepCount; i += 1) {\n      ctx.bezierCurveTo(x + step, cp1y, x + step, cp2y, x + 2 * step, line.rect.y);\n      x += 2 * step;\n    }\n  } else {\n    ctx.moveTo(line.rect.x, line.rect.y);\n    ctx.lineTo(line.rect.x + line.rect.width, line.rect.y);\n    if (/double/.test(line.style)) {\n      ctx.moveTo(line.rect.x, line.rect.y + line.rect.height * 2);\n      ctx.lineTo(line.rect.x + line.rect.width, line.rect.y + line.rect.height * 2);\n    }\n  }\n  ctx.stroke(line.color);\n  ctx.restore();\n};\nvar renderLine = function renderLine(ctx, line, options) {\n  var lineAscent = line.ascent;\n  if (options.outlineLines) {\n    ctx.rect(line.box.x, line.box.y, line.box.width, line.box.height).stroke();\n  }\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y + lineAscent);\n  for (var i = 0; i < line.runs.length; i += 1) {\n    var run = line.runs[i];\n    var isLastRun = i === line.runs.length - 1;\n    if (run.attributes.backgroundColor) {\n      var overflowRight = isLastRun ? line.overflowRight : 0;\n      var backgroundRect = {\n        x: 0,\n        y: -lineAscent,\n        height: line.box.height,\n        width: run.xAdvance - overflowRight\n      };\n      renderBackground$1(ctx, backgroundRect, run.attributes.backgroundColor);\n    }\n    renderRun(ctx, run, options);\n  }\n  ctx.restore();\n  ctx.save();\n  ctx.translate(line.box.x, line.box.y);\n  for (var _i = 0; _i < line.decorationLines.length; _i += 1) {\n    var decorationLine = line.decorationLines[_i];\n    renderDecorationLine(ctx, decorationLine);\n  }\n  ctx.restore();\n};\nvar renderBlock = function renderBlock(ctx, block, options) {\n  block.forEach(function (line) {\n    renderLine(ctx, line, options);\n  });\n};\nvar renderText = function renderText(ctx, node) {\n  var _node$box2, _node$box3;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var blocks = [node.lines];\n  var paddingTop = ((_node$box2 = node.box) === null || _node$box2 === void 0 ? void 0 : _node$box2.paddingTop) || 0;\n  var paddingLeft = ((_node$box3 = node.box) === null || _node$box3 === void 0 ? void 0 : _node$box3.paddingLeft) || 0;\n  var initialY = node.lines[0] ? node.lines[0].box.y : 0;\n  var offsetX = node.alignOffset || 0;\n  ctx.save();\n  ctx.translate(left + paddingLeft - offsetX, top + paddingTop - initialY);\n  blocks.forEach(function (block) {\n    renderBlock(ctx, block, {});\n  });\n  ctx.restore();\n};\n\nvar renderPage = function renderPage(ctx, node) {\n  var _node$props;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height;\n  var dpi = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.dpi) || 72;\n  var userUnit = dpi / 72;\n  ctx.addPage({\n    size: [width, height],\n    margin: 0,\n    userUnit: userUnit\n  });\n};\n\nvar renderNote = function renderNote(ctx, node) {\n  var _node$children, _node$style, _node$style2;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left;\n  var value = (node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children[0].value) || '';\n  var color = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.backgroundColor) || null;\n  var borderWidth = ((_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.borderWidth) || null;\n  ctx.note(left, top, 0, 0, value, {\n    color: color,\n    borderWidth: borderWidth\n  });\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n};\nvar applyContainObjectFit = function applyContainObjectFit(cw, ch, iw, ih, px, py) {\n  var cr = cw / ch;\n  var ir = iw / ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _height = ch;\n    var _width = _height * ir;\n    var _yOffset = isNumeric(py) ? py : 0;\n    var _xOffset = isNumeric(px) ? px : (cw - _width) * pxv;\n    return {\n      width: _width,\n      height: _height,\n      xOffset: _xOffset,\n      yOffset: _yOffset\n    };\n  }\n  var width = cw;\n  var height = width / ir;\n  var xOffset = isNumeric(px) ? px : 0;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    yOffset: yOffset,\n    xOffset: xOffset\n  };\n};\nvar applyNoneObjectFit = function applyNoneObjectFit(cw, ch, iw, ih, px, py) {\n  var width = iw;\n  var height = ih;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyCoverObjectFit = function applyCoverObjectFit(cw, ch, iw, ih, px, py) {\n  var ir = iw / ih;\n  var cr = cw / ch;\n  var pxp = matchPercent(px);\n  var pyp = matchPercent(py);\n  var pxv = pxp ? pxp.percent : 0.5;\n  var pyv = pyp ? pyp.percent : 0.5;\n  if (cr > ir) {\n    var _width2 = cw;\n    var _height2 = _width2 / ir;\n    var _xOffset2 = isNumeric(px) ? px : 0;\n    var _yOffset2 = isNumeric(py) ? py : (ch - _height2) * pyv;\n    return {\n      width: _width2,\n      height: _height2,\n      yOffset: _yOffset2,\n      xOffset: _xOffset2\n    };\n  }\n  var height = ch;\n  var width = height * ir;\n  var xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  var yOffset = isNumeric(py) ? py : 0;\n  return {\n    width: width,\n    height: height,\n    xOffset: xOffset,\n    yOffset: yOffset\n  };\n};\nvar applyScaleDownObjectFit = function applyScaleDownObjectFit(cw, ch, iw, ih, px, py) {\n  var containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  var noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n  return containDimension.width < noneDimension.width ? containDimension : noneDimension;\n};\nvar applyFillObjectFit = function applyFillObjectFit(cw, ch, px, py) {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0\n  };\n};\nvar resolveObjectFit = function resolveObjectFit(type, cw, ch, iw, ih, px, py) {\n  if (type === void 0) {\n    type = 'fill';\n  }\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nvar drawImage = function drawImage(ctx, node, options) {\n  var _node$style, _node$style2, _node$style3, _node$style4;\n  if (options === void 0) {\n    options = {};\n  }\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top;\n  var opacity = (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity;\n  var objectFit = (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.objectFit;\n  var objectPositionX = (_node$style3 = node.style) === null || _node$style3 === void 0 ? void 0 : _node$style3.objectPositionX;\n  var objectPositionY = (_node$style4 = node.style) === null || _node$style4 === void 0 ? void 0 : _node$style4.objectPositionY;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var imageCache = options.imageCache || new Map();\n  var _resolveObjectFit = resolveObjectFit(objectFit, node.box.width - paddingLeft - paddingRight, node.box.height - paddingTop - paddingBottom, node.image.width, node.image.height, objectPositionX, objectPositionY),\n    width = _resolveObjectFit.width,\n    height = _resolveObjectFit.height,\n    xOffset = _resolveObjectFit.xOffset,\n    yOffset = _resolveObjectFit.yOffset;\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      var cacheKey = node.image.key;\n      var image = imageCache.get(cacheKey) || ctx.embedImage(node.image.data);\n      if (cacheKey) imageCache.set(cacheKey, image);\n      var imageOpacity = isNil(opacity) ? 1 : opacity;\n      ctx.fillOpacity(imageOpacity).image(image, left + paddingLeft + xOffset, top + paddingTop + yOffset, {\n        width: width,\n        height: height\n      });\n    } else {\n      console.warn(\"Image with src '\" + JSON.stringify(node.props.src) + \"' skipped due to invalid dimensions\");\n    }\n  }\n};\nvar renderImage = function renderImage(ctx, node, options) {\n  ctx.save();\n  clipNode(ctx, node);\n  drawImage(ctx, node, options);\n  ctx.restore();\n};\n\nvar CONTENT_COLOR = '#a1c6e7';\nvar PADDING_COLOR = '#c4deb9';\nvar MARGIN_COLOR = '#f8cca1';\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nvar debugContent = function debugContent(ctx, node) {\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top,\n    width = _node$box.width,\n    height = _node$box.height,\n    _node$box$paddingLeft = _node$box.paddingLeft,\n    paddingLeft = _node$box$paddingLeft === void 0 ? 0 : _node$box$paddingLeft,\n    _node$box$paddingTop = _node$box.paddingTop,\n    paddingTop = _node$box$paddingTop === void 0 ? 0 : _node$box$paddingTop,\n    _node$box$paddingRigh = _node$box.paddingRight,\n    paddingRight = _node$box$paddingRigh === void 0 ? 0 : _node$box$paddingRigh,\n    _node$box$paddingBott = _node$box.paddingBottom,\n    paddingBottom = _node$box$paddingBott === void 0 ? 0 : _node$box$paddingBott,\n    _node$box$borderLeftW = _node$box.borderLeftWidth,\n    borderLeftWidth = _node$box$borderLeftW === void 0 ? 0 : _node$box$borderLeftW,\n    _node$box$borderTopWi = _node$box.borderTopWidth,\n    borderTopWidth = _node$box$borderTopWi === void 0 ? 0 : _node$box$borderTopWi,\n    _node$box$borderRight = _node$box.borderRightWidth,\n    borderRightWidth = _node$box$borderRight === void 0 ? 0 : _node$box$borderRight,\n    _node$box$borderBotto = _node$box.borderBottomWidth,\n    borderBottomWidth = _node$box$borderBotto === void 0 ? 0 : _node$box$borderBotto;\n  ctx.fillColor(CONTENT_COLOR).opacity(0.5).rect(left + paddingLeft + borderLeftWidth, top + paddingTop + borderTopWidth, width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth, height - paddingTop - paddingBottom - borderTopWidth - borderBottomWidth).fill();\n};\nvar debugPadding = function debugPadding(ctx, node) {\n  var _node$box2 = node.box,\n    left = _node$box2.left,\n    top = _node$box2.top,\n    width = _node$box2.width,\n    height = _node$box2.height,\n    _node$box2$paddingLef = _node$box2.paddingLeft,\n    paddingLeft = _node$box2$paddingLef === void 0 ? 0 : _node$box2$paddingLef,\n    _node$box2$paddingTop = _node$box2.paddingTop,\n    paddingTop = _node$box2$paddingTop === void 0 ? 0 : _node$box2$paddingTop,\n    _node$box2$paddingRig = _node$box2.paddingRight,\n    paddingRight = _node$box2$paddingRig === void 0 ? 0 : _node$box2$paddingRig,\n    _node$box2$paddingBot = _node$box2.paddingBottom,\n    paddingBottom = _node$box2$paddingBot === void 0 ? 0 : _node$box2$paddingBot,\n    _node$box2$borderLeft = _node$box2.borderLeftWidth,\n    borderLeftWidth = _node$box2$borderLeft === void 0 ? 0 : _node$box2$borderLeft,\n    _node$box2$borderTopW = _node$box2.borderTopWidth,\n    borderTopWidth = _node$box2$borderTopW === void 0 ? 0 : _node$box2$borderTopW,\n    _node$box2$borderRigh = _node$box2.borderRightWidth,\n    borderRightWidth = _node$box2$borderRigh === void 0 ? 0 : _node$box2$borderRigh,\n    _node$box2$borderBott = _node$box2.borderBottomWidth,\n    borderBottomWidth = _node$box2$borderBott === void 0 ? 0 : _node$box2$borderBott;\n  ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n  // Padding top\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + borderTopWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingTop).fill();\n\n  // Padding left\n  ctx.rect(left + borderLeftWidth, top + borderTopWidth, paddingLeft, height - borderTopWidth - borderBottomWidth).fill();\n\n  // Padding right\n  ctx.rect(left + width - paddingRight - borderRightWidth, top + borderTopWidth, paddingRight, height - borderTopWidth - borderBottomWidth).fill();\n\n  // Padding bottom\n  ctx.rect(left + paddingLeft + borderLeftWidth, top + height - paddingBottom - borderBottomWidth, width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth, paddingBottom).fill();\n};\nvar getMargin = function getMargin(box) {\n  var marginLeft = box.marginLeft === 'auto' ? 0 : box.marginLeft;\n  var marginTop = box.marginTop === 'auto' ? 0 : box.marginTop;\n  var marginRight = box.marginRight === 'auto' ? 0 : box.marginRight;\n  var marginBottom = box.marginBottom === 'auto' ? 0 : box.marginBottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom\n  };\n};\nvar debugMargin = function debugMargin(ctx, node) {\n  var _node$box3 = node.box,\n    left = _node$box3.left,\n    top = _node$box3.top,\n    width = _node$box3.width,\n    height = _node$box3.height;\n  var _getMargin = getMargin(node.box),\n    _getMargin$marginLeft = _getMargin.marginLeft,\n    marginLeft = _getMargin$marginLeft === void 0 ? 0 : _getMargin$marginLeft,\n    _getMargin$marginTop = _getMargin.marginTop,\n    marginTop = _getMargin$marginTop === void 0 ? 0 : _getMargin$marginTop,\n    _getMargin$marginRigh = _getMargin.marginRight,\n    marginRight = _getMargin$marginRigh === void 0 ? 0 : _getMargin$marginRigh,\n    _getMargin$marginBott = _getMargin.marginBottom,\n    marginBottom = _getMargin$marginBott === void 0 ? 0 : _getMargin$marginBott;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n  // Margin top\n  ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n  // Margin left\n  ctx.rect(left - marginLeft, top - marginTop, marginLeft, height + marginTop + marginBottom).fill();\n\n  // Margin right\n  ctx.rect(left + width, top - marginTop, marginRight, height + marginTop + marginBottom).fill();\n\n  // Margin bottom\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\nvar debugText = function debugText(ctx, node) {\n  var _node$box4 = node.box,\n    left = _node$box4.left,\n    top = _node$box4.top,\n    width = _node$box4.width,\n    height = _node$box4.height;\n  var _getMargin2 = getMargin(node.box),\n    _getMargin2$marginLef = _getMargin2.marginLeft,\n    marginLeft = _getMargin2$marginLef === void 0 ? 0 : _getMargin2$marginLef,\n    _getMargin2$marginTop = _getMargin2.marginTop,\n    marginTop = _getMargin2$marginTop === void 0 ? 0 : _getMargin2$marginTop,\n    _getMargin2$marginRig = _getMargin2.marginRight,\n    marginRight = _getMargin2$marginRig === void 0 ? 0 : _getMargin2$marginRig,\n    _getMargin2$marginBot = _getMargin2.marginBottom,\n    marginBottom = _getMargin2$marginBot === void 0 ? 0 : _getMargin2$marginBot;\n  var roundedWidth = Math.round(width + marginLeft + marginRight);\n  var roundedHeight = Math.round(height + marginTop + marginBottom);\n  ctx.fontSize(6).opacity(1).fillColor('black').text(roundedWidth + \" x \" + roundedHeight, left - marginLeft, Math.max(top - marginTop - 4, 1));\n};\nvar debugOrigin = function debugOrigin(ctx, node) {\n  if (node.origin) {\n    ctx.circle(node.origin.left, node.origin.top, 3).fill('red').circle(node.origin.left, node.origin.top, 5).stroke('red');\n  }\n};\nvar renderDebug = function renderDebug(ctx, node) {\n  var _node$props;\n  if (!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.debug)) return;\n  ctx.save();\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n  ctx.restore();\n};\n\nvar availableMethods = ['dash', 'clip', 'save', 'path', 'fill', 'font', 'text', 'rect', 'scale', 'moveTo', 'lineTo', 'stroke', 'rotate', 'circle', 'lineCap', 'opacity', 'ellipse', 'polygon', 'restore', 'lineJoin', 'fontSize', 'fillColor', 'lineWidth', 'translate', 'miterLimit', 'strokeColor', 'fillOpacity', 'roundedRect', 'fillAndStroke', 'strokeOpacity', 'bezierCurveTo', 'quadraticCurveTo', 'linearGradient', 'radialGradient'];\nvar painter = function painter(ctx) {\n  var p = availableMethods.reduce(function (acc, prop) {\n    var _extends2;\n    return _extends({}, acc, (_extends2 = {}, _extends2[prop] = function () {\n      ctx[prop].apply(ctx, arguments);\n      return p;\n    }, _extends2));\n  }, {});\n  return p;\n};\nvar renderCanvas = function renderCanvas(ctx, node) {\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var paddingTop = node.box.paddingTop || 0;\n  var paddingLeft = node.box.paddingLeft || 0;\n  var paddingRight = node.box.paddingRight || 0;\n  var paddingBottom = node.box.paddingBottom || 0;\n  var availableWidth = width - paddingLeft - paddingRight;\n  var availableHeight = height - paddingTop - paddingBottom;\n  if (!availableWidth || !availableHeight) {\n    console.warn('Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.');\n  }\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n  ctx.restore();\n};\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\nvar clipBorderTop = function clipBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  var c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width - c0, top, left + width, top + c0, left + width, top + rtr);\n\n  // Move down in case the margin exceedes the radius\n  var topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c2, left + width - borderRightWidth - c1, top + borderTopWidth, left + width - borderRightWidth - innerTopRightRadiusX, top + borderTopWidth);\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  var topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + borderLeftWidth + c3, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c4, left + borderLeftWidth, topLeftYCoord);\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  var c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var _trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderTop = function fillBorderTop(ctx, layout, style, rtr, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width;\n  var borderTopColor = style.borderTopColor,\n    borderTopWidth = style.borderTopWidth,\n    borderTopStyle = style.borderTopStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rtl * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2);\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, {\n      space: borderTopWidth * 1.2\n    });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, {\n      space: borderTopWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderRight = function clipBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderBottomWidth = style.borderBottomWidth;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  var c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n\n  // Move left in case the margin exceedes the radius\n  var topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + width - borderRightWidth - c1, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c2, left + width - borderRightWidth, top + height - Math.max(rbr, borderBottomWidth));\n\n  // Clip inner right border edge\n  ctx.lineTo(left + width - borderRightWidth, top + Math.max(rtr, borderTopWidth));\n\n  // Ellipse coefficients inner top right cap\n  var innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  var innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  var c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  var topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + width - borderRightWidth, top + borderTopWidth + c4, left + width - borderRightWidth - c3, top + borderTopWidth, topRightXCoord, top + borderTopWidth);\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  var c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + width - c5, top, left + width, top + c5, left + width, top + rtr);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    var trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderRight = function fillBorderRight(ctx, layout, style, rtr, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderRightColor = style.borderRightColor,\n    borderRightStyle = style.borderRightStyle,\n    borderRightWidth = style.borderRightWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbr * (1.0 - KAPPA);\n  var c1 = rtr * (1.0 - KAPPA);\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(left + width - c1, top, left + width, top + c1, left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c0, left + width - c0, top + height, left + width - rbr, top + height);\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, {\n      space: borderRightWidth * 1.2\n    });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, {\n      space: borderRightWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderBottom = function clipBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  var c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n\n  // Move up in case the margin exceedes the radius\n  var bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c2, left + borderLeftWidth + c1, top + height - borderBottomWidth, left + borderLeftWidth + innerBottomLeftRadiusX, top + height - borderBottomWidth);\n\n  // Clip inner bottom border edge\n  ctx.lineTo(left + width - Math.max(rbr, borderRightWidth), top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  var innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  var c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  var bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + width - borderRightWidth - c3, top + height - borderBottomWidth, left + width - borderRightWidth, top + height - borderBottomWidth - c4, left + width - borderRightWidth, bottomRightYCoord);\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  var c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left + width, top + height - c5, left + width - c5, top + height, left + width - rbr, top + height);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    var brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderLeftWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderBottom = function fillBorderBottom(ctx, layout, style, rbl, rbr) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderBottomColor = style.borderBottomColor,\n    borderBottomStyle = style.borderBottomStyle,\n    borderBottomWidth = style.borderBottomWidth,\n    borderRightWidth = style.borderRightWidth,\n    borderLeftWidth = style.borderLeftWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rbr * (1.0 - KAPPA);\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(left + width, top + height - c1, left + width - c1, top + height, left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2);\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, {\n      space: borderBottomWidth * 1.2\n    });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, {\n      space: borderBottomWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar clipBorderLeft = function clipBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    width = layout.width,\n    height = layout.height;\n  var borderTopWidth = style.borderTopWidth,\n    borderLeftWidth = style.borderLeftWidth,\n    borderBottomWidth = style.borderBottomWidth;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  var c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  var topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  var innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  var innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  var c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  var c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(left + borderLeftWidth + c1, top + borderTopWidth, left + borderLeftWidth, top + borderTopWidth + c2, left + borderLeftWidth, top + Math.max(rtl, borderTopWidth));\n\n  // Clip inner left border edge\n  ctx.lineTo(left + borderLeftWidth, top + height - Math.max(rbl, borderBottomWidth));\n\n  // Ellipse coefficients inner bottom left cap\n  var innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  var innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  var c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  var c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  var bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(left + borderLeftWidth, top + height - borderBottomWidth - c4, left + borderLeftWidth + c3, top + height - borderBottomWidth, bottomLeftXCoord, top + height - borderBottomWidth);\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  var c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(left + c5, top + height, left, top + height - c5, left, top + height - rbl);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    var trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n  if (borderBottomWidth) {\n    var _trSlope2 = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, _trSlope2 * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\nvar fillBorderLeft = function fillBorderLeft(ctx, layout, style, rbl, rtl) {\n  var top = layout.top,\n    left = layout.left,\n    height = layout.height;\n  var borderLeftColor = style.borderLeftColor,\n    borderLeftStyle = style.borderLeftStyle,\n    borderLeftWidth = style.borderLeftWidth,\n    borderTopWidth = style.borderTopWidth,\n    borderBottomWidth = style.borderBottomWidth;\n  var c0 = rbl * (1.0 - KAPPA);\n  var c1 = rtl * (1.0 - KAPPA);\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(left + c0, top + height, left, top + height - c0, left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2);\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, {\n      space: borderLeftWidth * 1.2\n    });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, {\n      space: borderLeftWidth * 1.2\n    });\n  }\n  ctx.stroke();\n  ctx.undash();\n};\nvar shouldRenderBorders = function shouldRenderBorders(node) {\n  return node.box && (node.box.borderTopWidth || node.box.borderRightWidth || node.box.borderBottomWidth || node.box.borderLeftWidth);\n};\nvar renderBorders = function renderBorders(ctx, node) {\n  if (!shouldRenderBorders(node)) return;\n  var _node$box = node.box,\n    width = _node$box.width,\n    height = _node$box.height,\n    borderTopWidth = _node$box.borderTopWidth,\n    borderLeftWidth = _node$box.borderLeftWidth,\n    borderRightWidth = _node$box.borderRightWidth,\n    borderBottomWidth = _node$box.borderBottomWidth;\n  var _node$style = node.style,\n    opacity = _node$style.opacity,\n    _node$style$borderTop = _node$style.borderTopLeftRadius,\n    borderTopLeftRadius = _node$style$borderTop === void 0 ? 0 : _node$style$borderTop,\n    _node$style$borderTop2 = _node$style.borderTopRightRadius,\n    borderTopRightRadius = _node$style$borderTop2 === void 0 ? 0 : _node$style$borderTop2,\n    _node$style$borderBot = _node$style.borderBottomLeftRadius,\n    borderBottomLeftRadius = _node$style$borderBot === void 0 ? 0 : _node$style$borderBot,\n    _node$style$borderBot2 = _node$style.borderBottomRightRadius,\n    borderBottomRightRadius = _node$style$borderBot2 === void 0 ? 0 : _node$style$borderBot2,\n    _node$style$borderTop3 = _node$style.borderTopColor,\n    borderTopColor = _node$style$borderTop3 === void 0 ? 'black' : _node$style$borderTop3,\n    _node$style$borderTop4 = _node$style.borderTopStyle,\n    borderTopStyle = _node$style$borderTop4 === void 0 ? 'solid' : _node$style$borderTop4,\n    _node$style$borderLef = _node$style.borderLeftColor,\n    borderLeftColor = _node$style$borderLef === void 0 ? 'black' : _node$style$borderLef,\n    _node$style$borderLef2 = _node$style.borderLeftStyle,\n    borderLeftStyle = _node$style$borderLef2 === void 0 ? 'solid' : _node$style$borderLef2,\n    _node$style$borderRig = _node$style.borderRightColor,\n    borderRightColor = _node$style$borderRig === void 0 ? 'black' : _node$style$borderRig,\n    _node$style$borderRig2 = _node$style.borderRightStyle,\n    borderRightStyle = _node$style$borderRig2 === void 0 ? 'solid' : _node$style$borderRig2,\n    _node$style$borderBot3 = _node$style.borderBottomColor,\n    borderBottomColor = _node$style$borderBot3 === void 0 ? 'black' : _node$style$borderBot3,\n    _node$style$borderBot4 = _node$style.borderBottomStyle,\n    borderBottomStyle = _node$style$borderBot4 === void 0 ? 'solid' : _node$style$borderBot4;\n  var style = {\n    borderTopColor: borderTopColor,\n    borderTopWidth: borderTopWidth,\n    borderTopStyle: borderTopStyle,\n    borderLeftColor: borderLeftColor,\n    borderLeftWidth: borderLeftWidth,\n    borderLeftStyle: borderLeftStyle,\n    borderRightColor: borderRightColor,\n    borderRightWidth: borderRightWidth,\n    borderRightStyle: borderRightStyle,\n    borderBottomColor: borderBottomColor,\n    borderBottomWidth: borderBottomWidth,\n    borderBottomStyle: borderBottomStyle,\n    borderTopLeftRadius: borderTopLeftRadius,\n    borderTopRightRadius: borderTopRightRadius,\n    borderBottomLeftRadius: borderBottomLeftRadius,\n    borderBottomRightRadius: borderBottomRightRadius\n  };\n  var rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  var rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  var rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  var rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n  ctx.restore();\n};\n\nvar drawBackground = function drawBackground(ctx, node) {\n  var _node$style;\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var color = parseColor(node.style.backgroundColor);\n  var nodeOpacity = isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.opacity) ? 1 : node.style.opacity;\n  var opacity = Math.min(color.opacity, nodeOpacity);\n  ctx.fillOpacity(opacity).fillColor(color.value).rect(left, top, width, height).fill();\n};\nvar renderBackground = function renderBackground(ctx, node) {\n  var _node$style2;\n  var hasBackground = !!node.box && !!((_node$style2 = node.style) !== null && _node$style2 !== void 0 && _node$style2.backgroundColor);\n  if (hasBackground) {\n    ctx.save();\n    clipNode(ctx, node);\n    drawBackground(ctx, node);\n    ctx.restore();\n  }\n};\n\nvar isSrcId = function isSrcId(value) {\n  return /^#.+/.test(value);\n};\nvar setLink = function setLink(ctx, node) {\n  var props = node.props || {};\n  var _node$box = node.box,\n    top = _node$box.top,\n    left = _node$box.left,\n    width = _node$box.width,\n    height = _node$box.height;\n  var src = props.src || props.href;\n  if (src) {\n    var isId = isSrcId(src);\n    var method = isId ? 'goTo' : 'link';\n    var value = isId ? src.slice(1) : src;\n    ctx[method](left, top, width, height, value);\n  }\n};\n\nvar setDestination = function setDestination(ctx, node) {\n  var _node$props;\n  if ((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.id) {\n    ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n  }\n};\n\nvar _renderFns;\nvar isRecursiveNode = function isRecursiveNode(node) {\n  return node.type !== P.Text && node.type !== P.Svg;\n};\nvar renderChildren = function renderChildren(ctx, node, options) {\n  ctx.save();\n  if (node.box) {\n    ctx.translate(node.box.left, node.box.top);\n  }\n  var children = node.children || [];\n  var renderChild = function renderChild(child) {\n    return renderNode(ctx, child, options);\n  };\n  children.forEach(renderChild);\n  ctx.restore();\n};\nvar renderFns = (_renderFns = {}, _renderFns[P.Text] = renderText, _renderFns[P.Note] = renderNote, _renderFns[P.Image] = renderImage, _renderFns[P.Canvas] = renderCanvas, _renderFns[P.Svg] = renderSvg, _renderFns[P.Link] = setLink, _renderFns);\nvar renderNode = function renderNode(ctx, node, options) {\n  var _node$style;\n  var overflowHidden = ((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.overflow) === 'hidden';\n  var shouldRenderChildren = isRecursiveNode(node);\n  if (node.type === P.Page) renderPage(ctx, node);\n  ctx.save();\n  if (overflowHidden) clipNode(ctx, node);\n  applyTransformations(ctx, node);\n  renderBackground(ctx, node);\n  renderBorders(ctx, node);\n  var renderFn = renderFns[node.type];\n  if (renderFn) renderFn(ctx, node, options);\n  if (shouldRenderChildren) renderChildren(ctx, node, options);\n  setDestination(ctx, node);\n  renderDebug(ctx, node);\n  ctx.restore();\n};\n\n/* eslint-disable no-param-reassign */\n\nvar setPDFMetadata = function setPDFMetadata(target) {\n  return function (key, value) {\n    if (value) target.info[key] = value;\n  };\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\nvar addMetadata = function addMetadata(ctx, doc) {\n  var _props$creator, _props$producer;\n  var setProp = setPDFMetadata(ctx);\n  var props = doc.props || {};\n  var title = props.title || null;\n  var author = props.author || null;\n  var subject = props.subject || null;\n  var keywords = props.keywords || null;\n  var creator = (_props$creator = props.creator) != null ? _props$creator : 'react-pdf';\n  var producer = (_props$producer = props.producer) != null ? _props$producer : 'react-pdf';\n  var creationDate = props.creationDate || new Date();\n  var modificationDate = props.modificationDate || null;\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n  setProp('CreationDate', creationDate);\n  setProp('ModificationDate', modificationDate);\n};\n\n/* eslint-disable no-param-reassign */\n\nvar addNodeBookmark = function addNodeBookmark(ctx, node, pageNumber, registry) {\n  var _node$props;\n  var bookmark = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.bookmark;\n  if (bookmark) {\n    var title = bookmark.title,\n      parent = bookmark.parent,\n      expanded = bookmark.expanded,\n      zoom = bookmark.zoom,\n      fit = bookmark.fit;\n    var outline = registry[parent] || ctx.outline;\n    var top = bookmark.top || node.box.top;\n    var left = bookmark.left || node.box.left;\n    var instance = outline.addItem(title, {\n      pageNumber: pageNumber,\n      expanded: expanded,\n      top: top,\n      left: left,\n      zoom: zoom,\n      fit: fit\n    });\n    registry[bookmark.ref] = instance;\n  }\n  if (!node.children) return;\n  node.children.forEach(function (child) {\n    return addNodeBookmark(ctx, child, pageNumber, registry);\n  });\n};\nvar addBookmarks = function addBookmarks(ctx, root) {\n  var registry = {};\n  var pages = root.children || [];\n  pages.forEach(function (page, i) {\n    addNodeBookmark(ctx, page, i, registry);\n  });\n};\n\nvar render = function render(ctx, doc) {\n  var pages = doc.children || [];\n  var options = {\n    imageCache: new Map()\n  };\n  addMetadata(ctx, doc);\n  pages.forEach(function (page) {\n    return renderNode(ctx, page, options);\n  });\n  addBookmarks(ctx, doc);\n  ctx.end();\n  return ctx;\n};\n\nexport { render as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}