{"ast":null,"code":"/** Text hyphenation in Javascript.\n *  Copyright (C) 2024 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  function createTextReader(setup) {\n    var char1 = \"\";\n    var char2 = \"\";\n    var i = 0;\n    var verifier = setup();\n    return function (text) {\n      while (i < text.length) {\n        char1 = text.charAt(i++);\n        char2 = text.charAt(i);\n        var verified = verifier(char1, char2);\n        if (verified !== void 0) {\n          return verified;\n        }\n      }\n    };\n  }\n  var isNotLetter = RegExp.prototype.test.bind(/\\s|(?![\\'])[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/);\n  function createHTMLVerifier() {\n    var skip = false;\n    return function (accumulate, chars) {\n      if (skip) {\n        if (chars[0] === \">\") {\n          accumulate();\n          skip = false;\n        }\n      } else if (chars[0] === \"<\" && (!isNotLetter(chars[1]) || chars[1] === \"/\")) {\n        skip = true;\n      }\n      return skip;\n    };\n  }\n  function createHyphenCharVerifier(hyphenChar) {\n    var skip = false;\n    return function (accumulate, chars) {\n      if (skip) {\n        if (!isNotLetter(chars[0]) && isNotLetter(chars[1])) {\n          accumulate();\n          skip = false;\n        }\n      } else if (!isNotLetter(chars[0]) && chars[1] === hyphenChar) {\n        skip = true;\n      }\n      return skip;\n    };\n  }\n  function createHyphenationVerifier(verifiers, minWordLength) {\n    return function () {\n      var accum0 = \"\";\n      var accum = \"\";\n      function accumulate() {\n        accum0 += accum;\n        accum = \"\";\n      }\n      function resolveWith(value) {\n        accum0 = \"\";\n        accum = \"\";\n        return value;\n      }\n      return function (char1, char2) {\n        accum += char1;\n        var skip = verifiers.reduce(function (skip2, verify) {\n          return skip2 || verify(accumulate, [char1, char2]);\n        }, false);\n        if (!skip) {\n          if (isNotLetter(char1) && !isNotLetter(char2)) {\n            accumulate();\n          }\n          if (!isNotLetter(char1) && isNotLetter(char2)) {\n            if (accum.length >= minWordLength) {\n              return resolveWith([accum0, accum]);\n            } else {\n              accumulate();\n            }\n          }\n        }\n        if (char2 === \"\") {\n          if (accum.length < minWordLength || skip) {\n            accumulate();\n          }\n          return resolveWith([accum0, accum]);\n        }\n      };\n    };\n  }\n  function createCharIterator(str) {\n    var i = 0;\n    function nextChar() {\n      return str[i++];\n    }\n    function isLastLetter() {\n      return str.length === i + 1;\n    }\n    return [nextChar, isLastLetter];\n  }\n  function createStringSlicer(str) {\n    var i = 0,\n      slice = str;\n    function next() {\n      slice = str.slice(i++);\n      if (slice.length < 3) {\n        return;\n      }\n      return slice;\n    }\n    function isFirstCharacter() {\n      return i === 2;\n    }\n    return [next, isFirstCharacter];\n  }\n  function hyphenateWord(text, levelsTable, patternTree, debug, hyphenChar) {\n    var levels = new Array(text.length + 1),\n      loweredText = (\".\" + text.toLocaleLowerCase() + \".\").split(\"\"),\n      wordSlice,\n      letter,\n      treePtr,\n      nextPtr,\n      patternLevelsIndex,\n      patternLevels,\n      patternEntityIndex = -1,\n      slicer,\n      nextSlice,\n      isFirstCharacter,\n      charIterator,\n      nextLetter,\n      isLastLetter;\n    for (var i = levels.length; i--;) levels[i] = 0;\n    slicer = createStringSlicer(loweredText);\n    nextSlice = slicer[0];\n    isFirstCharacter = slicer[1];\n    while (wordSlice = nextSlice()) {\n      patternEntityIndex++;\n      if (isFirstCharacter()) {\n        patternEntityIndex--;\n      }\n      treePtr = patternTree;\n      charIterator = createCharIterator(wordSlice);\n      nextLetter = charIterator[0];\n      isLastLetter = charIterator[1];\n      while (letter = nextLetter()) {\n        if (treePtr[letter] === void 0) {\n          break;\n        }\n        nextPtr = treePtr[letter];\n        treePtr = nextPtr[0];\n        patternLevelsIndex = nextPtr[1];\n        if (treePtr === void 0) {\n          treePtr = {};\n          patternLevelsIndex = nextPtr;\n        }\n        if (isLastLetter()) {\n          continue;\n        }\n        if (patternLevelsIndex === void 0) {\n          continue;\n        }\n        if (!levelsTable[patternLevelsIndex].splice) {\n          levelsTable[patternLevelsIndex] = levelsTable[patternLevelsIndex].slice(\"\");\n        }\n        patternLevels = levelsTable[patternLevelsIndex];\n        for (var k = 0; k < patternLevels.length; k++) levels[patternEntityIndex + k] = Math.max(patternLevels[k], levels[patternEntityIndex + k]);\n      }\n    }\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[levels.length - 2] = 0;\n    var hyphenatedText = \"\";\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText += (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n    }\n    return hyphenatedText;\n  }\n  function start(text, levelsTable, patterns, cache, debug, hyphenChar, skipHTML, minWordLength, isAsync) {\n    function done() {\n      resolveNewText(newText);\n    }\n    var newText = \"\",\n      fragments,\n      readText = createTextReader(createHyphenationVerifier((skipHTML ? [createHTMLVerifier()] : []).concat(createHyphenCharVerifier(hyphenChar)), minWordLength)),\n      resolveNewText = function () {};\n    function nextTick() {\n      var loopStart = /* @__PURE__ */new Date();\n      while ((!isAsync || /* @__PURE__ */new Date() - loopStart < 10) && (fragments = readText(text))) {\n        if (fragments[1]) {\n          var cacheKey = fragments[1].length ? \"~\" + fragments[1] : \"\";\n          if (cache[cacheKey] === void 0) {\n            cache[cacheKey] = hyphenateWord(fragments[1], levelsTable, patterns, debug, hyphenChar);\n          }\n          fragments[1] = cache[cacheKey];\n        }\n        newText += fragments[0] + fragments[1];\n      }\n      if (!fragments) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n  var SETTING_DEFAULT_ASYNC = false;\n  var SETTING_DEFAULT_DEBUG = false;\n  var SETTING_DEFAULT_EXCEPTIONS = [];\n  var SETTING_DEFAULT_HTML = true;\n  var SETTING_DEFAULT_HYPH_CHAR = \"\\xAD\";\n  var SETTING_DEFAULT_MIN_WORD_LENGTH = 5;\n  var SETTING_NAME_ASYNC = \"async\";\n  var SETTING_NAME_DEBUG = \"debug\";\n  var SETTING_NAME_EXCEPTIONS = \"exceptions\";\n  var SETTING_NAME_HTML = \"html\";\n  var SETTING_NAME_HYPH_CHAR = \"hyphenChar\";\n  var SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n  var _global = typeof global === \"object\" ? global : typeof window === \"object\" ? window : typeof self === \"object\" ? self : false ? void 0 : {};\n  function extend(target, source) {\n    target = target || {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function validateArray(value) {\n    return value instanceof Array;\n  }\n  function keyOrDefault(object, key, defaultValue, test) {\n    if (key in object && (test ? test(object[key]) : true)) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n  function exceptionsFromDefinition(excetionsList, hyphenChar) {\n    return excetionsList.reduce(function (exceptions, exception) {\n      exceptions[\"~\" + exception.replace(/\\-/g, \"\")] = exception.replace(/\\-/g, hyphenChar);\n      return exceptions;\n    }, {});\n  }\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var asyncMode = keyOrDefault(options, SETTING_NAME_ASYNC, SETTING_DEFAULT_ASYNC),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(options, SETTING_NAME_HYPH_CHAR, SETTING_DEFAULT_HYPH_CHAR),\n      levelsTable = patternsDefinition[0].split(\",\"),\n      patterns = JSON.parse(patternsDefinition[1]),\n      minWordLength = keyOrDefault(options, SETTING_NAME_MIN_WORD_LENGTH, SETTING_DEFAULT_MIN_WORD_LENGTH) >> 0,\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML),\n      userExceptions = keyOrDefault(options, SETTING_NAME_EXCEPTIONS, SETTING_DEFAULT_EXCEPTIONS, validateArray);\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = {};\n    if (patternsDefinition[2]) {\n      exceptions[cacheKey] = exceptionsFromDefinition(patternsDefinition[2], hyphenChar);\n    }\n    if (userExceptions && userExceptions.length) {\n      exceptions[cacheKey] = extend(exceptions[cacheKey], exceptionsFromDefinition(userExceptions, hyphenChar));\n    }\n    caches[cacheKey] = extend({}, exceptions[cacheKey]);\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\");\n    }\n    return function (text, options2) {\n      options2 = options2 || {};\n      var localDebug = keyOrDefault(options2, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(options2, SETTING_NAME_HYPH_CHAR, hyphenChar),\n        localMinWordLength = keyOrDefault(options2, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >> 0,\n        localUserExceptions = keyOrDefault(options2, SETTING_NAME_EXCEPTIONS, SETTING_DEFAULT_EXCEPTIONS, validateArray),\n        cacheKey2 = localHyphenChar + localMinWordLength;\n      if (!exceptions[cacheKey2] && patternsDefinition[2]) {\n        exceptions[cacheKey2] = exceptionsFromDefinition(patternsDefinition[2], localHyphenChar);\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      if (localUserExceptions && localUserExceptions.length) {\n        exceptions[cacheKey2] = extend(exceptions[cacheKey2], exceptionsFromDefinition(localUserExceptions, localHyphenChar));\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      return start(text, levelsTable, patterns, caches[cacheKey2], localDebug, localHyphenChar, skipHTML, localMinWordLength, asyncMode);\n    };\n  }\n  return createHyphenator;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","createHyphenator","createTextReader","setup","char1","char2","i","verifier","text","length","charAt","verified","isNotLetter","RegExp","prototype","test","bind","createHTMLVerifier","skip","accumulate","chars","createHyphenCharVerifier","hyphenChar","createHyphenationVerifier","verifiers","minWordLength","accum0","accum","resolveWith","value","reduce","skip2","verify","createCharIterator","str","nextChar","isLastLetter","createStringSlicer","slice","next","isFirstCharacter","hyphenateWord","levelsTable","patternTree","debug","levels","Array","loweredText","toLocaleLowerCase","split","wordSlice","letter","treePtr","nextPtr","patternLevelsIndex","patternLevels","patternEntityIndex","slicer","nextSlice","charIterator","nextLetter","splice","k","Math","max","hyphenatedText","start","patterns","cache","skipHTML","isAsync","done","resolveNewText","newText","fragments","readText","concat","nextTick","loopStart","Date","cacheKey","setTimeout","Promise","resolve","SETTING_DEFAULT_ASYNC","SETTING_DEFAULT_DEBUG","SETTING_DEFAULT_EXCEPTIONS","SETTING_DEFAULT_HTML","SETTING_DEFAULT_HYPH_CHAR","SETTING_DEFAULT_MIN_WORD_LENGTH","SETTING_NAME_ASYNC","SETTING_NAME_DEBUG","SETTING_NAME_EXCEPTIONS","SETTING_NAME_HTML","SETTING_NAME_HYPH_CHAR","SETTING_NAME_MIN_WORD_LENGTH","_global","global","window","self","extend","target","source","key","validateArray","keyOrDefault","object","defaultValue","exceptionsFromDefinition","excetionsList","exceptions","exception","replace","patternsDefinition","options","asyncMode","caches","JSON","parse","userExceptions","Error","options2","localDebug","localHyphenChar","localMinWordLength","localUserExceptions","cacheKey2"],"sources":["E:/SLIIT/2nd Year/Y2S2/ITP/Project/MOH-Midwife-3/MOH-Midwife-3/midwife/frontend/node_modules/hyphen/hyphen.js"],"sourcesContent":["/** Text hyphenation in Javascript.\n *  Copyright (C) 2024 Yevhen Tiurin (yevhentiurin@gmail.com)\n *  https://github.com/ytiurin/hyphen\n *\n *  Released under the ISC license\n *  https://github.com/ytiurin/hyphen/blob/master/LICENSE\n */\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.createHyphenator = factory();\n  }\n})(this, function () {\n  function createTextReader(setup) {\n    var char1 = \"\";\n    var char2 = \"\";\n    var i = 0;\n    var verifier = setup();\n    return function (text) {\n      while (i < text.length) {\n        char1 = text.charAt(i++);\n        char2 = text.charAt(i);\n        var verified = verifier(char1, char2);\n        if (verified !== void 0) {\n          return verified;\n        }\n      }\n    };\n  }\n\n  var isNotLetter = RegExp.prototype.test.bind(\n    /\\s|(?![\\'])[\\!-\\@\\[-\\`\\{-\\~\\u2013-\\u203C]/\n  );\n  function createHTMLVerifier() {\n    var skip = false;\n    return function (accumulate, chars) {\n      if (skip) {\n        if (chars[0] === \">\") {\n          accumulate();\n          skip = false;\n        }\n      } else if (\n        chars[0] === \"<\" &&\n        (!isNotLetter(chars[1]) || chars[1] === \"/\")\n      ) {\n        skip = true;\n      }\n      return skip;\n    };\n  }\n  function createHyphenCharVerifier(hyphenChar) {\n    var skip = false;\n    return function (accumulate, chars) {\n      if (skip) {\n        if (!isNotLetter(chars[0]) && isNotLetter(chars[1])) {\n          accumulate();\n          skip = false;\n        }\n      } else if (!isNotLetter(chars[0]) && chars[1] === hyphenChar) {\n        skip = true;\n      }\n      return skip;\n    };\n  }\n  function createHyphenationVerifier(verifiers, minWordLength) {\n    return function () {\n      var accum0 = \"\";\n      var accum = \"\";\n      function accumulate() {\n        accum0 += accum;\n        accum = \"\";\n      }\n      function resolveWith(value) {\n        accum0 = \"\";\n        accum = \"\";\n        return value;\n      }\n      return function (char1, char2) {\n        accum += char1;\n        var skip = verifiers.reduce(function (skip2, verify) {\n          return skip2 || verify(accumulate, [char1, char2]);\n        }, false);\n        if (!skip) {\n          if (isNotLetter(char1) && !isNotLetter(char2)) {\n            accumulate();\n          }\n          if (!isNotLetter(char1) && isNotLetter(char2)) {\n            if (accum.length >= minWordLength) {\n              return resolveWith([accum0, accum]);\n            } else {\n              accumulate();\n            }\n          }\n        }\n        if (char2 === \"\") {\n          if (accum.length < minWordLength || skip) {\n            accumulate();\n          }\n          return resolveWith([accum0, accum]);\n        }\n      };\n    };\n  }\n\n  function createCharIterator(str) {\n    var i = 0;\n    function nextChar() {\n      return str[i++];\n    }\n    function isLastLetter() {\n      return str.length === i + 1;\n    }\n    return [nextChar, isLastLetter];\n  }\n  function createStringSlicer(str) {\n    var i = 0,\n      slice = str;\n    function next() {\n      slice = str.slice(i++);\n      if (slice.length < 3) {\n        return;\n      }\n      return slice;\n    }\n    function isFirstCharacter() {\n      return i === 2;\n    }\n    return [next, isFirstCharacter];\n  }\n  function hyphenateWord(text, levelsTable, patternTree, debug, hyphenChar) {\n    var levels = new Array(text.length + 1),\n      loweredText = (\".\" + text.toLocaleLowerCase() + \".\").split(\"\"),\n      wordSlice,\n      letter,\n      treePtr,\n      nextPtr,\n      patternLevelsIndex,\n      patternLevels,\n      patternEntityIndex = -1,\n      slicer,\n      nextSlice,\n      isFirstCharacter,\n      charIterator,\n      nextLetter,\n      isLastLetter;\n    for (var i = levels.length; i--; ) levels[i] = 0;\n    slicer = createStringSlicer(loweredText);\n    nextSlice = slicer[0];\n    isFirstCharacter = slicer[1];\n    while ((wordSlice = nextSlice())) {\n      patternEntityIndex++;\n      if (isFirstCharacter()) {\n        patternEntityIndex--;\n      }\n      treePtr = patternTree;\n      charIterator = createCharIterator(wordSlice);\n      nextLetter = charIterator[0];\n      isLastLetter = charIterator[1];\n      while ((letter = nextLetter())) {\n        if (treePtr[letter] === void 0) {\n          break;\n        }\n        nextPtr = treePtr[letter];\n        treePtr = nextPtr[0];\n        patternLevelsIndex = nextPtr[1];\n        if (treePtr === void 0) {\n          treePtr = {};\n          patternLevelsIndex = nextPtr;\n        }\n        if (isLastLetter()) {\n          continue;\n        }\n        if (patternLevelsIndex === void 0) {\n          continue;\n        }\n        if (!levelsTable[patternLevelsIndex].splice) {\n          levelsTable[patternLevelsIndex] = levelsTable[\n            patternLevelsIndex\n          ].slice(\"\");\n        }\n        patternLevels = levelsTable[patternLevelsIndex];\n        for (var k = 0; k < patternLevels.length; k++)\n          levels[patternEntityIndex + k] = Math.max(\n            patternLevels[k],\n            levels[patternEntityIndex + k]\n          );\n      }\n    }\n    levels[0] = levels[1] = levels[levels.length - 1] = levels[\n      levels.length - 2\n    ] = 0;\n    var hyphenatedText = \"\";\n    for (var i = 0; i < levels.length; i++) {\n      hyphenatedText +=\n        (levels[i] % 2 === 1 ? hyphenChar : \"\") + text.charAt(i);\n    }\n    return hyphenatedText;\n  }\n\n  function start(\n    text,\n    levelsTable,\n    patterns,\n    cache,\n    debug,\n    hyphenChar,\n    skipHTML,\n    minWordLength,\n    isAsync\n  ) {\n    function done() {\n      resolveNewText(newText);\n    }\n    var newText = \"\",\n      fragments,\n      readText = createTextReader(\n        createHyphenationVerifier(\n          (skipHTML ? [createHTMLVerifier()] : []).concat(\n            createHyphenCharVerifier(hyphenChar)\n          ),\n          minWordLength\n        )\n      ),\n      resolveNewText = function () {};\n    function nextTick() {\n      var loopStart = /* @__PURE__ */ new Date();\n      while (\n        (!isAsync || /* @__PURE__ */ new Date() - loopStart < 10) &&\n        (fragments = readText(text))\n      ) {\n        if (fragments[1]) {\n          var cacheKey = fragments[1].length ? \"~\" + fragments[1] : \"\";\n          if (cache[cacheKey] === void 0) {\n            cache[cacheKey] = hyphenateWord(\n              fragments[1],\n              levelsTable,\n              patterns,\n              debug,\n              hyphenChar\n            );\n          }\n          fragments[1] = cache[cacheKey];\n        }\n        newText += fragments[0] + fragments[1];\n      }\n      if (!fragments) {\n        done();\n      } else {\n        setTimeout(nextTick);\n      }\n    }\n    if (isAsync) {\n      setTimeout(nextTick);\n      return new Promise(function (resolve) {\n        resolveNewText = resolve;\n      });\n    } else {\n      nextTick();\n      return newText;\n    }\n  }\n\n  var SETTING_DEFAULT_ASYNC = false;\n  var SETTING_DEFAULT_DEBUG = false;\n  var SETTING_DEFAULT_EXCEPTIONS = [];\n  var SETTING_DEFAULT_HTML = true;\n  var SETTING_DEFAULT_HYPH_CHAR = \"\\xAD\";\n  var SETTING_DEFAULT_MIN_WORD_LENGTH = 5;\n  var SETTING_NAME_ASYNC = \"async\";\n  var SETTING_NAME_DEBUG = \"debug\";\n  var SETTING_NAME_EXCEPTIONS = \"exceptions\";\n  var SETTING_NAME_HTML = \"html\";\n  var SETTING_NAME_HYPH_CHAR = \"hyphenChar\";\n  var SETTING_NAME_MIN_WORD_LENGTH = \"minWordLength\";\n  var _global =\n    typeof global === \"object\"\n      ? global\n      : typeof window === \"object\"\n      ? window\n      : typeof self === \"object\"\n      ? self\n      : false\n      ? void 0\n      : {};\n  function extend(target, source) {\n    target = target || {};\n    for (var key in source) {\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function validateArray(value) {\n    return value instanceof Array;\n  }\n  function keyOrDefault(object, key, defaultValue, test) {\n    if (key in object && (test ? test(object[key]) : true)) {\n      return object[key];\n    }\n    return defaultValue;\n  }\n  function exceptionsFromDefinition(excetionsList, hyphenChar) {\n    return excetionsList.reduce(function (exceptions, exception) {\n      exceptions[\"~\" + exception.replace(/\\-/g, \"\")] = exception.replace(\n        /\\-/g,\n        hyphenChar\n      );\n      return exceptions;\n    }, {});\n  }\n  function createHyphenator(patternsDefinition, options) {\n    options = options || {};\n    var asyncMode = keyOrDefault(\n        options,\n        SETTING_NAME_ASYNC,\n        SETTING_DEFAULT_ASYNC\n      ),\n      caches = {},\n      debug = keyOrDefault(options, SETTING_NAME_DEBUG, SETTING_DEFAULT_DEBUG),\n      exceptions = {},\n      hyphenChar = keyOrDefault(\n        options,\n        SETTING_NAME_HYPH_CHAR,\n        SETTING_DEFAULT_HYPH_CHAR\n      ),\n      levelsTable = patternsDefinition[0].split(\",\"),\n      patterns = JSON.parse(patternsDefinition[1]),\n      minWordLength =\n        keyOrDefault(\n          options,\n          SETTING_NAME_MIN_WORD_LENGTH,\n          SETTING_DEFAULT_MIN_WORD_LENGTH\n        ) >> 0,\n      skipHTML = keyOrDefault(options, SETTING_NAME_HTML, SETTING_DEFAULT_HTML),\n      userExceptions = keyOrDefault(\n        options,\n        SETTING_NAME_EXCEPTIONS,\n        SETTING_DEFAULT_EXCEPTIONS,\n        validateArray\n      );\n    var cacheKey = hyphenChar + minWordLength;\n    exceptions[cacheKey] = {};\n    if (patternsDefinition[2]) {\n      exceptions[cacheKey] = exceptionsFromDefinition(\n        patternsDefinition[2],\n        hyphenChar\n      );\n    }\n    if (userExceptions && userExceptions.length) {\n      exceptions[cacheKey] = extend(\n        exceptions[cacheKey],\n        exceptionsFromDefinition(userExceptions, hyphenChar)\n      );\n    }\n    caches[cacheKey] = extend({}, exceptions[cacheKey]);\n    if (asyncMode && !(\"Promise\" in _global)) {\n      throw new Error(\n        \"Failed to create hyphenator: Could not find global Promise object, needed for hyphenator to work in async mode\"\n      );\n    }\n    return function (text, options2) {\n      options2 = options2 || {};\n      var localDebug = keyOrDefault(options2, SETTING_NAME_DEBUG, debug),\n        localHyphenChar = keyOrDefault(\n          options2,\n          SETTING_NAME_HYPH_CHAR,\n          hyphenChar\n        ),\n        localMinWordLength =\n          keyOrDefault(options2, SETTING_NAME_MIN_WORD_LENGTH, minWordLength) >>\n          0,\n        localUserExceptions = keyOrDefault(\n          options2,\n          SETTING_NAME_EXCEPTIONS,\n          SETTING_DEFAULT_EXCEPTIONS,\n          validateArray\n        ),\n        cacheKey2 = localHyphenChar + localMinWordLength;\n      if (!exceptions[cacheKey2] && patternsDefinition[2]) {\n        exceptions[cacheKey2] = exceptionsFromDefinition(\n          patternsDefinition[2],\n          localHyphenChar\n        );\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      if (localUserExceptions && localUserExceptions.length) {\n        exceptions[cacheKey2] = extend(\n          exceptions[cacheKey2],\n          exceptionsFromDefinition(localUserExceptions, localHyphenChar)\n        );\n        caches[cacheKey2] = extend(caches[cacheKey2], exceptions[cacheKey2]);\n      }\n      return start(\n        text,\n        levelsTable,\n        patterns,\n        caches[cacheKey2],\n        localDebug,\n        localHyphenChar,\n        skipHTML,\n        localMinWordLength,\n        asyncMode\n      );\n    };\n  }\n\n  return createHyphenator;\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}